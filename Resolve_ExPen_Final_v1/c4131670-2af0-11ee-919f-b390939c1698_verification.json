{"default_url":null,"content":{"state":2,"taskInstructions":"<h2>Instructions</h2><br>Using known email domains, search for employee email addresses and potential passwords in breach data.<br><br><b>NOTE: DO NOT</b> use credentials discovered within the data breach sets to attempt to login to websites that aren't directly associated with the client. For example, if BreachDB contains user credentials that were part of the LinkedIn data breach, do not attempt to use those credentials to log in to LinkedIn's website as that user. The intent of these credentials is for credential stuffing and password guessing attacks against in-scope assets during an engagement.<br><br><h2>Variation: Automation with Invoke-BreachDB</h2><br>1. Navigate to https://github.com/NetSPI/PowerShell-Private/tree/master/BreachDB<br>2. Follow the instructions in the readme for setup and execution, but common commands have been listed below.<br><br><h3>Examples:</h3><br><code>Invoke-BreachDB-Query -domain 'netspi.com' Invoke-BreachDB-Query -domain 'netspi.com' -source 'linkedin2016'<br>Invoke-BreachDB-Query -email 'lee.buttke@netspi.com'<br></code><br><h2>Variation: Manual Review Options</h2><br>1. Visit https://haveibeenpwned.com<br>","references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":17063363,"exploitInstructions":"Use emails, usernames, and passwords found in the breach database to conduct follow up credentials stuffing and password guessing attacks against single factor management interfaces such as Citrix, VMware Horizon, Web based terminal services, Web application admin consoles, cloud platforms, and connected SaaS providers. Ensure that assets are in-scope before executing the attacks, and never test the credentials against third-party websites that are not explicitly part of the engagement.<br>","verificationInstructions":"<h1>Instructions</h1><br>1. Using known email domains, search for employee email addresses and potential passwords in breach data.  <br>2. If breach data is found for employees add this finding.<br>3. In the verification, include a list of the identified employee names and the source of the database breach for each.  If the list is too long upload an spreadsheet to the Documents section of the Resolve project and reference it in the verification item and list the affected employee count.<br><br> <b>NOTE: DO NOT</b> use credentials discovered within the data breach sets to attempt to login to websites that aren't directly associated with the client. For example, if BreachDB contains user credentials that were part of the LinkedIn data breach, do not attempt to use those credentials to log in to LinkedIn's website as that user.  The intent of these credentials is for credential stuffing and password guessing attacks against in-scope assets during an engagement.  <br><br><h2>Variation: Automation with Invoke-BreachDB</h2><br>1. Navigate to https://github.com/NetSPI/PowerShell-Private/tree/master/BreachDB <br>2. Follow the instructions in the readme for setup and execution, but common commands have been listed below.  <br>Examples:<br><br><code>Invoke-BreachDB-Query -domain 'netspi.com' Invoke-BreachDB-Query -domain 'netspi.com' -source 'linkedin2016' <br>Invoke-BreachDB-Query -email 'lee.buttke@netspi.com'  <br></code><br><h2>Variation: Manual Review Options</h2><br>1. Visit https://haveibeenpwned.com<br>","remediationInstructions":"No corrective action is required.  However, it is recommended to notify the employees identified.<br>","name":"Employee - Breach Data Found","sourceId":"M:715b7b2c-0084-47c9-828a-888ec2ae4539","severity":"Informational","businessImpact":"NA","description":"It was possible to identify email address, usernames or credentials associated with potential employees by reviewing known data breach dumps.<br><br>"}}}