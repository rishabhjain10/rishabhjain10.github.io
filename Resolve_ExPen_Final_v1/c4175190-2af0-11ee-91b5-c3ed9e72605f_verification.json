{"default_url":null,"content":{"state":3,"taskInstructions":"<h2>Instructions</h2><br>Consider monitoring certstream using a tool like bucketstream during testing to identify potentially new client domain created during testing.<br><br><b>Note:</b> You are NOT required to spend a lot of time on this one, eventually we'll need some automation for this.<br><b>Note:</b> Sometimes this reveals internal Active Directory domain names and internal computer names.<br><br><h2><b>Variation: Certstream.calidog.io</b></h2><br><b>Reference:</b> https://certstream.calidog.io/<br><br>1.  Visit the cert stream website at https://certstream.calidog.io/ or download the binaries to monitor the stream for certificated information associate with the client or known domains.<br><br><h2><b>Variation: Certstream</b></h2><br>1. You can also install certstream on your Linux system. Below are some sample commands:<br><code>apt-get install certstream<br>certstream --json<br>certstream | grep -i &quot;mycompany&quot;<br></code><br>2. Review the information for undocumented domain names. They should be found in the commonName field.<br><br><h2><b>Variation: BucketStream</b></h2><br><b>Reference:</b> https://github.com/eth0izzle/bucket-stream<br><br>This tool simply listens to various certificate transparency logs (via certstream) and attempts to find public S3 buckets from permutations of the certificates domain name. <br><br>1. Installation. Python 3.4+ and pip3 are required.<br><code>git clone https://github.com/eth0izzle/bucket-stream.git<br>(optional) Create a virtualenv with pip3 install virtualenv &amp;&amp; virtualenv .virtualenv &amp;&amp; source .virtualenv/bin/activate<br>pip3 install -r requirements.txt<br>python3 bucket-stream.py<br></code><br>2. You can run it with other options as well.<br><h3>Example:</h3><br><code>python3 bucket-stream.py --threads 20 --permutations /root/mypermutations.txt<br></code><br><h2><b>Reporting Requirements</b></h2><br>Record the newly discovered domains in the task notes and include them in the vulnerability scanning process if they are in scope.<br>","references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":null}}