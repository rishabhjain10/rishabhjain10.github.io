{"default_url":null,"content":{"state":2,"taskInstructions":"<h2>Instructions</h2><br>If the client provided IP addresses are owned by the client using arin.net. If any of the IP addresses are not owned by the client, then inform the client and PM so the scope can be corrected. You can use the scripts below for quick arin lookups.  <br><br><h2><b>Variation: ipinfo</b></h2><br>Note: Limit of about 1000 per source IP every 24 hours.<br><br>1. Download https://github.com/NetSPI/OSINT/tree/master/ipinfo<br>2. Run the tool.<br><code>python ipinfo.py -f list_of_ips_one_per_line.txt -o CustomOutput.csv<br></code><br><h2><b>Variation: NetblockTool</b></h2><br>Note: Limit of about 1000 per source IP every 24 hours.<br><br> 1. Download  and install <a href='https://github.com/NetSPI/NetblockTool/blob/bf5a668dc52089265d9c72df3feb4dcb23ba9798/README.md'>n</a>etblock tool from <a href='https://github.com/NetSPI/NetblockTool'>https://github.com/NetSPI/NetblockTool</a>.<br><code>git clone https://github.com/NetSPI/NetblockTool.git<br>cd NetblockTool &amp;&amp; pip3 install -r requirements.txt<br></code><br>2.  Below are the subsidiary options.<br><code>Company Subsidiaries:<br>    -s        Fetch subsidiary information and return netblocks of all subsidiaries in<br>                  addition to initial target<br>    -sn       Company name to use when fetching subsidiaries<br>    -sp       Use alternate parsing method when fetching subsidiary information; use<br>                  if the default method isn't working as expected<br>    -so       Write subsidiary information to a text file (CompanyName_subsidiaries.txt)<br></code><br>3. Run the tool with the desired options.<br><code>python3 NetblockTool.py -v Company -s -sn companyname<br></code><br><h2><b>Variation: Get-ArinLookup.ps1 </b></h2><br>1. Download https://github.com/NetSPI/OSINT/blob/master/Arin/Get-ArinLookup.ps1 <br>2. Change the path define in the $myips variable in the source code and run the script. It will write the results to a csv and pop up a window that displays the results.<br>3. Run the script in PowerShell_ISE.<br>","references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":null}}