{"default_url":null,"content":{"state":3,"taskInstructions":"<h2>Instructions</h2><br>Using known email domains, search for employee email addresses using the https://rocketreach.co. This process is currently manual.<br><br><h2>Variation: Google Dork</h2><br>Search for employee emails using the Google dork below:<br><code>site:rocketreach.co @emaildomain.com<br></code><br><h2>Variation: Manual</h2><br>1. Search for employee via the Google dork below. Replace emaildomain.com with your target company's domain.<br><code>site:rocketreach.co @emaildomain.com<br></code><br>2. Check RocketReach.co pages for employees.<br><br><h2><b>Report Verification</b></h2><br>Please add this finding to the workspace and add the discovered email addresses as a verification item.<br><br><h3><b>Additional Notes</b></h3><br>Use the &quot;Employee - Gather Contacts&quot; checklist Burp Scripter with the following script:<br><code>if not messageIsRequest:<br>  response = messageInfo.getResponse()<br>  analyzedResponse = helpers.analyzeResponse(response)<br>  headerList = analyzedResponse.getHeaders()<br>  bodyStr = helpers.bytesToString(response[analyzedResponse.getBodyOffset():]).encode('ascii','ignore')<br>  if &quot;email &amp; phone&quot; in bodyStr:<br>    strs = bodyStr.split(&quot;email &amp; phone&quot;)<br>    strs.pop(-1) &#35;remove the last item<br>    for str in strs:<br>      try:<br>        name = (str.rsplit(&quot;x3e&quot;,1)[1]).strip()<br>      except:<br>        x=&quot;test&quot;<br>      try:<br>        name = (str.rsplit(&quot;\\&quot;&gt;&quot;,1)[1]).strip()<br>        if &quot;=\\&quot;&quot; in name:<br>          name = str.rsplit(&quot;=\\&quot;&quot;,1)[1]<br>        if &quot;&lt;title&gt;&quot; in name:<br>          name = (str.rsplit(&quot;&lt;title&gt;&quot;,1)[1]).strip()<br>      except:<br>        x=&quot;test&quot;<br>      print name<br>  if &quot;email &amp; phone&quot; in bodyStr:<br>    strs = bodyStr.split(&quot;email &amp; phone&quot;)<br>    strs.pop(-1) &#35;remove the last item<br>    for str in strs:<br>      try:<br>        name = (str.rsplit(&quot;x3e&quot;,1)[1]).strip()<br>      except:<br>        x=&quot;test&quot;<br>      try:<br>        name = (str.rsplit(&quot;\\&quot;&gt;&quot;,1)[1]).strip()<br>        if &quot;=\\&quot;&quot; in name:<br>          name = str.rsplit(&quot;=\\&quot;&quot;,1)[1]<br>        if &quot;&lt;title&gt;&quot; in name:<br>          name = (str.rsplit(&quot;&lt;title&gt;&quot;,1)[1]).strip()<br>      except:<br>        x=&quot;test&quot;<br>      print name<br></code><br>","references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":17064433,"exploitInstructions":"","verificationInstructions":"<b>Instructions</b><br><br>Using known email domains, search for employee email addresses using the https://rocketreach.co.  This process is currently manual.<br><br>Search for employee emails using the Google dork below:<br><br>site:rocketreach.co @emaildomain.com<br><br><b>Report Verification</b><br><br>Please add this finding to the workspace and add the discovered email addresses as a verification item.<br><br><b>Additional Notes</b><br><br>Use the \"Employee - Gather Contacts\" checklist Burp Scripter with the following script: <br><br>if not messageIsRequest:<br>  response = messageInfo.getResponse()<br>  analyzedResponse = helpers.analyzeResponse(response)<br>  headerList = analyzedResponse.getHeaders()<br>  bodyStr = helpers.bytesToString(response[analyzedResponse.getBodyOffset():]).encode('ascii','ignore')<br>  if \"email &amp; phone\" in bodyStr:<br>    strs = bodyStr.split(\"email &amp; phone\")<br>    strs.pop(-1) &#35;remove the last item<br>    for str in strs:<br>      try:<br>        name = (str.rsplit(\"x3e\",1)[1]).strip()<br>      except:<br>        x=\"test\"<br>      try:<br>        name = (str.rsplit(\"\\\"&gt;\",1)[1]).strip()<br>        if \"=\\\"\" in name:<br>          name = str.rsplit(\"=\\\"\",1)[1]<br>        if \"&lt;title&gt;\" in name:<br>          name = (str.rsplit(\"&lt;title&gt;\",1)[1]).strip()<br>      except:<br>        x=\"test\"<br>      print name<br>  if \"email &amp; phone\" in bodyStr:<br>    strs = bodyStr.split(\"email &amp; phone\")<br>    strs.pop(-1) &#35;remove the last item<br>    for str in strs:<br>      try:<br>        name = (str.rsplit(\"x3e\",1)[1]).strip()<br>      except:<br>        x=\"test\"<br>      try:<br>        name = (str.rsplit(\"\\\"&gt;\",1)[1]).strip()<br>        if \"=\\\"\" in name:<br>          name = str.rsplit(\"=\\\"\",1)[1]<br>        if \"&lt;title&gt;\" in name:<br>          name = (str.rsplit(\"&lt;title&gt;\",1)[1]).strip()<br>      except:<br>        x=\"test\"<br>      print name<br>","remediationInstructions":"NA<br>","name":"Employee - RocketReach.co","sourceId":"M:eb50d940-c1b5-4a0c-b1e6-49a591cef876","severity":"Informational","businessImpact":"NA","description":"Using known email domains, search for employee email addresses using the https://rocketreach.co.  This process is currently manual.<br><br>Search for employee emails using the Google dork below:<br><br>site:rocketreach.co @emaildomain.com<br>"}}}