{"default_url":null,"content":{"state":3,"taskInstructions":"<h2>Instructions</h2><br>Use enumerated company and subsidiary names to identify IP ranges they own using common IP registries.<br><br><h2><b>Variation: Manual Review</b></h2><br>Below is a list of the common IP registries:<br><ul><li>North America     http://www.arin.net</li><br><li>Western Europe  http://www.ripe.net</li><br><li>Asian Pacific        http://www.apnic.net</li><br><li>Latin America      http://www.lacnic.net</li><br><li>Africa (AfrNIC)     http://www.afrinic.net</li><br></ul><br>Below are the URLs where you can issue arin.net lookups manually.<br><ul><li>Old: https://whois.arin.net/ui/query.do</li><br><li>New: https://search.arin.net/rdap/?query=ameriprise</li><br></ul><br><h2><b>Variation: Automated Review</b></h2><br>1. Download and install netblock tool from  <a href='https://github.com/NetSPI/NetblockTool'>https://github.com/NetSPI/NetblockTool</a>.<br><code>git clone https://github.com/NetSPI/NetblockTool.git<br>cd NetblockTool &amp;&amp; pip3 install -r requirements.txt<br></code><br>2.  Below are the subsidiary options.<br><code>Company Subsidiaries:<br>-s        Fetch subsidiary information and return netblocks of all subsidiaries in<br>          addition to initial target<br>-sn       Company name to use when fetching subsidiaries<br>-sp       Use alternate parsing method when fetching subsidiary information; use<br>          if the default method isn't working as expected<br>-so       Write subsidiary information to a text file (CompanyName_subsidiaries.txt)<br></code><br>3. Run the tool with the desired options.<br><code>python3 NetblockTool.py -v Company -s -sn companyname<br></code><br><b>Additional Options</b><br>1. Currently under review, but consider using a personal account for now.  https://ipinfo.io/<br><br><h2><b>Report Requirements</b></h2><br>Include a list of all discovered IP ranges in the task notes or upload them as a .txt file to the project Artifacts.<br><br><h2><b>Additional Notes</b></h2><br>Below is a quick nmap command to quickly parse IPs, IP ranges, and CIDR networks into a file containing only 1 IP address per line if needed.<br>1. Place all in scope IPs, IP Ranges, and CIDR network into one file.<br>2. Run the following command in linux to expand the ranges/networks  and create a new file with one IP per line.<br><code>nmap -sL -Pn -n -iL test1.txt | awk '{print $5}' | grep -v &quot;address&quot; | grep -v &quot;nmap&quot; | sort | uniq&gt; IPs_ClientProvided.txt<br></code><br>3. Import IPs_ClientProvided.txt into the Artifacts section for the project.<br>","references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":17064481,"exploitInstructions":"","verificationInstructions":"<h2>Instructions</h2><br>Use enumerated company and subsidiary names to identify IP ranges they own using common IP registries. <br><br><h2><b>Variation: Manual Review</b></h2><br>Below is a list of the common IP registries:<br><br><ul><li>North America     http://www.arin.net</li><br><li>Western Europe  http://www.ripe.net</li><br><li>Asian Pacific        http://www.apnic.net</li><br><li>Latin America      http://www.lacnic.net</li><br><li>Africa (AfrNIC)     http://www.afrinic.net</li><br></ul><br>Below are the URLs where you can issue arin.net lookups manually.<br><br><ul><li>Old: https://whois.arin.net/ui/query.do</li><br><li>New: https://search.arin.net/rdap/?query=ameriprise</li><br></ul><br><h2><b>Variation: Automated Review</b> </h2><br>1. Download  and install <a href='https://github.com/NetSPI/NetblockTool/blob/bf5a668dc52089265d9c72df3feb4dcb23ba9798/README.md'>n</a>etblock tool from  <a href='https://github.com/NetSPI/NetblockTool'>https://github.com/NetSPI/NetblockTool</a>.<br><br><code>git clone https://github.com/NetSPI/NetblockTool.git<br>cd NetblockTool &amp;&amp; pip3 install -r requirements.txt<br></code><br>2.  Below are the subsidiary options.<br><br><code>Company Subsidiaries:<br>    -s        Fetch subsidiary information and return netblocks of all subsidiaries in<br>                  addition to initial target<br>    -sn       Company name to use when fetching subsidiaries<br>    -sp       Use alternate parsing method when fetching subsidiary information; use<br>                  if the default method isn't working as expected<br>    -so       Write subsidiary information to a text file (CompanyName_subsidiaries.txt)<br></code><br>3. Run the tool with the desired options.<br><br><code>python3 NetblockTool.py -v Company -s -sn companyname<br></code><br><b>Additional Options</b><br>1. Currently under review, but consider using a personal account for now.  https://ipinfo.io/<br><br><h2><b>Report Requirements</b></h2><br>Include a list of all discovered IP ranges in the task notes or attach them as a .txt file to the project documents.<br><br><h2><b>Additional Notes</b></h2><br>Below is a quick nmap command to quickly parse IPs, IP ranges, and CIDR networks into a file containing only 1 IP address per line if needed.<br>1. Place all in scope IPs, IP Ranges, and CIDR network into one file.<br>2. Run the following command in linux to expand the ranges/networks  and create a new file with one IP per line.<br><br><code>nmap -sL -Pn -n -iL test1.txt | awk '{print $5}' | grep -v &quot;address&quot; | grep -v &quot;nmap&quot; | sort | uniq&gt; IPs_ClientProvided.txt<br></code><br>3. Import IPs_ClientProvided.txt into the Artifacts section for the project. <br>","remediationInstructions":"Depending on the source of the information and the type of company, remediation steps may not be necessary.<br><br>Note: Please note that this is only done when blind company discovery in explicitly included in scope.<br>","name":"General Information - Identified IP Ranges - Registeries","sourceId":"M:eca0842d-9a52-41b0-85ef-254ec4db0347","severity":"Informational","businessImpact":"Company IP ranges can often be used in future technical and administrative attacks.","description":"Use enumerated company and subsidiary names to identify IP ranges they own using common IP registries.<br>"}}}