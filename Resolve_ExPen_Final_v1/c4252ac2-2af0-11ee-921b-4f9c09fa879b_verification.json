{"default_url":null,"content":{"state":2,"taskInstructions":"<h2>Instructions</h2><br>Verify SPF records exist for email domains, white listed IP ranges and domains cannot be hijacked.<br>Check for SPF records on domains being used for email to identify missed SPF records and interesting TXT records that could indicate the use of technologies that could be targeted in future attacks.<br><br><b>Important Notes</b><br><ul><li>SPF records are a type of DNS TXT record.</li><br><li>SPF records contains a list of internet servers allowed to send email for the domain.</li><br><li>SPF records can include a &quot;soft fail&quot; (~all) to indicate that IPs sending email for the domain that are not on the list should be marked as SPAM.</li><br><li>SPF records can include a hard fail (-all) to indicate that IPs sending email for the domain that are not on the list should be blocked.</li><br><li>SPF records may point to another TXT record using the &quot;include:&quot; setting.</li><br></ul><br>Clients getting mail from your domain validate the servers using your SPF records. However, they don't have to honor it.<br><b>Note:</b> As an attacker if you can obtain access to SPF IPs or relay through them you can spoof email from the domain.<br><br><h2>Variation: dig</h2><br>1. Use dig to identify SPF records.<br><code><b>dig txt google.com +short<br><br></b><b><red>&quot;v=spf1 include:_spf.google.com ~all&quot;</red></b><b><br></b>&quot;facebook-domain-verification=22rm551cu4k0ab0bxsw536tlds4h95&quot;<br>&quot;apple-domain-verification=30afIBcvSuDV2PLX&quot;<br>&quot;globalsign-smime-dv=CDYX+XFHUw2wml6/Gb8+59BsH31KzUr6c1l2BPvqKX8=&quot;<br>&quot;docusign=05958488-4752-4ef2-95eb-aa7ba8a3bd0e&quot;<br>&quot;google-site-verification=TV9-DBe4R80X4v0M4U_bd_J9cpOJM0nikft0jAgjmsQ&quot;<br>&quot;MS=E4A68B9AB2BB9670BCE15412F62916164C0B20BB&quot;<br>&quot;docusign=1b0a6754-49b1-4db5-8540-d2c12664b289&quot;<br>&quot;google-site-verification=wD8N7i1JTNTkezJ49swvWW48f8_9xveREV4oB-0Hf5o&quot;<br></code><br><h2>Variation: checkdmarc</h2><br>1. Install checkdmarc.<br><code>pip install checkdmarc<br></code><br>2. Run checkdmarc against the target domain and use jq to filter for the SPF record.<br><code><b>checkdmarc google.com | jq '.spf.record'<br><br></b>&quot;v=spf1 include:_spf.google.com ~all&quot;<br></code><br><h2>Variation: dnsrecon</h2><br>1. Run dnsrecon and review the returned records.<br><code><b>dnsrecon -d google.com<br><br></b>[&#42;] std: Performing General Enumeration against: google.com...<br>[-] DNSSEC is not configured for google.com<br>[&#42;]      SOA ns1.google.com 216.239.32.10<br>[&#42;]      SOA ns1.google.com 2001:4860:4802:32::a<br>[&#42;]      NS ns4.google.com 216.239.38.10<br>[&#42;]      NS ns4.google.com 2001:4860:4802:38::a<br>[&#42;]      NS ns3.google.com 216.239.36.10<br>[&#42;]      NS ns3.google.com 2001:4860:4802:36::a<br>[&#42;]      NS ns1.google.com 216.239.32.10<br>[&#42;]      NS ns1.google.com 2001:4860:4802:32::a<br>[&#42;]      NS ns2.google.com 216.239.34.10<br>[&#42;]      NS ns2.google.com 2001:4860:4802:34::a<br>[&#42;]      MX smtp.google.com 172.217.212.27<br>[&#42;]      MX smtp.google.com 172.253.114.27<br>[&#42;]      MX smtp.google.com 172.253.119.27<br>[&#42;]      MX smtp.google.com 108.177.111.27<br>[&#42;]      MX smtp.google.com 74.125.124.27<br>[&#42;]      MX smtp.google.com 2607:f8b0:4001:c03::1a<br>[&#42;]      MX smtp.google.com 2607:f8b0:4001:c22::1b<br>[&#42;]      MX smtp.google.com 2607:f8b0:4001:c23::1a<br>[&#42;]      MX smtp.google.com 2607:f8b0:4001:c14::1b<br>[&#42;]      A google.com 142.250.191.174<br>[&#42;]      AAAA google.com 2607:f8b0:4009:819::200e<br>[&#42;]      <b>TXT google.com v=spf1 include:_spf.google.com ~all<br></b>[&#42;]      TXT google.com facebook-domain-verification=22rm551cu4k0ab0bxsw536tlds4h95<br>[&#42;]      TXT google.com apple-domain-verification=30afIBcvSuDV2PLX<br>[&#42;]      TXT google.com globalsign-smime-dv=CDYX+XFHUw2wml6/Gb8+59BsH31KzUr6c1l2BPvqKX8=<br>[&#42;]      TXT google.com docusign=05958488-4752-4ef2-95eb-aa7ba8a3bd0e<br>[&#42;]      TXT google.com google-site-verification=TV9-DBe4R80X4v0M4U_bd_J9cpOJM0nikft0jAgjmsQ<br>[&#42;]      TXT google.com MS=E4A68B9AB2BB9670BCE15412F62916164C0B20BB<br>[&#42;]      TXT google.com docusign=1b0a6754-49b1-4db5-8540-d2c12664b289<br>[&#42;]      TXT google.com google-site-verification=wD8N7i1JTNTkezJ49swvWW48f8_9xveREV4oB-0Hf5o<br>[&#42;]      TXT _dmarc.google.com v=DMARC1; p=reject; rua=mailto:mailauth-reports@google.com<br><b>[TRUNCATED]</b><br></code><br><h2><b>Variation: nslookup</b></h2><br>1. Use nslookup and review the returned records.<br><code><b>nslookup -type=txt google.com<br><br></b>Server:         172.24.0.1<br>Address:        172.24.0.1&#35;53<br><br>Non-authoritative answer:<br>google.com      text = <b>&quot;v=spf1 include:_spf.google.com ~all&quot;<br></b>google.com      text = &quot;facebook-domain-verification=22rm551cu4k0ab0bxsw536tlds4h95&quot;<br>google.com      text = &quot;apple-domain-verification=30afIBcvSuDV2PLX&quot;<br>google.com      text = &quot;globalsign-smime-dv=CDYX+XFHUw2wml6/Gb8+59BsH31KzUr6c1l2BPvqKX8=&quot;<br>google.com      text = &quot;docusign=05958488-4752-4ef2-95eb-aa7ba8a3bd0e&quot;<br>google.com      text = &quot;google-site-verification=TV9-DBe4R80X4v0M4U_bd_J9cpOJM0nikft0jAgjmsQ&quot;<br>google.com      text = &quot;MS=E4A68B9AB2BB9670BCE15412F62916164C0B20BB&quot;<br>google.com      text = &quot;docusign=1b0a6754-49b1-4db5-8540-d2c12664b289&quot;<br>google.com      text = &quot;google-site-verification=wD8N7i1JTNTkezJ49swvWW48f8_9xveREV4oB-0Hf5o&quot;<br><br>Authoritative answers can be found from:<br></code><br><h3>More Options:</h3><br>https://github.com/BishopFox/spoofcheck.git<br><br><h2>Reporting Requirements</h2><br><ul><li>Follow up on any odd TXT records to determine if related service have vulnerabilities.</li><br><li>Take a screen shot of the command and command output for the email domain that does not have an SPF record.</li><br></ul><br>","references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":17058974,"exploitInstructions":"","verificationInstructions":"Send a spoofed email from the internet.<br>- as microsoft.com<br>- as an internal domain<br><br>Example validation command:<br><br>dig domain.com txt host ns1.nameserver1.com<br><br>v=spf1 ip4:95.59.2.21 ip4:95.59.2.22 ip4:195.168.1.0/28 mx -all<br><br>or for JSON output of SPF records:<br><br>checkdmarc domain.com<br><br><br>Before executing the steps below create a test email server to conduct attacks from. The mail server does not have to be an Exchange server.<br><br>Use telnet to test SMTP communication<br>1. Open a telnet session: From a command prompt, type telnet, and then press ENTER.<br>2. Type set local_echo on a computer running Microsoft Windows 2000 Server or SET LOCALECHO on a computer running Windows Server 2003 or Windows XP, and then press ENTER. This command allows you to view the responses to the commands.<br>3. Type &lt;your mail server domain&gt; 25,and then press ENTER.<br>4. Type EHLO &lt;your mail server domain&gt;, and then press ENTER.<br>5. Type AUTH LOGIN. The server responds with an encrypted prompt for your user name.<br>6. Enter your user name encrypted in base 64. You can use one of several tools that are available to encode your user name.<br>7. The server responds with an encrypted base 64 prompt for your password. Enter your password encrypted in base 64.<br>8. Type MAIL FROM:&lt;sender@domain.com&gt;, and then press ENTER. If the sender is not permitted to send mail, the SMTP server returns an error.<br>9. Type RCPT TO:&lt;recipient@remotedomain.com&gt;,and then press ENTER.If the recipient is not a valid recipient or the server does not accept mail for this domain, the SMTP server returns an error.<br>10. Type DATA.<br>11. If desired, type message text, press ENTER, type a period (.), and then press ENTER again.<br>12. If mail is working properly, you should see a response similar to the following indicating that mail is queued for delivery.<br><br>target the procedures for the data exfil mail server for easy use just use the squirel webmail interface.<br>","remediationInstructions":"Consider configuring the mail server to reject emails that fail SPF validation checks.  Make sure set your SPF record to prohibit all sending IPs that are not specified by using the -all mechanism at the end of the SPF record. <br><br>Your SPF record should look something like this:  v=spf1 ip4:95.59.2.21 ip4:95.59.2.22 ip4:195.168.1.0/28 mx -all <br><br>If split DNS is being used, ensure that SPF is configured on both the external DNS forward lookup zone and the internal DNS forward lookup zone. Also, consider installing an anti-spam agent on the mail server.<br><br>To construct test emails follow the guidance from this article https://technet.microsoft.com/en-us/library/aa995718(v=exchg.65).aspx<br>","name":"Weak Configuration - SMTP - SPF Record Not Verified","sourceId":"M:36267774-ce5f-e611-80e3-ecf4bbd04083","severity":"Medium","businessImpact":"Attackers may be able to send forged email to impersonate sources of trusts.  As a result, users may click on links or open attachments of a malicious nature that could lead to a compromise of their systems.","description":"The Sender Policy Framework (SPF) is an open standard specifying a technical method to prevent sender address forgery. An SPF record is a TXT record in DNS that begins with v=spf1. It includes a list of IPs that sending domain owner has specified as permitted to send email for that domain and it also informs the recipient mail server what to do if an email is received from an IP that is not on the permitted senders list. <br><br>The primary mail servers are not configured to validate or enforce SPF records. Validating SPF records can help prevent attackers from sending forged emails from external domains.<br><br>Example validation command:<br><br>dig domain.com txt host ns1.nameserver1.com<br><br>v=spf1 ip4:95.59.2.21 ip4:95.59.2.22 ip4:195.168.1.0/28 mx -all<br>"}}}