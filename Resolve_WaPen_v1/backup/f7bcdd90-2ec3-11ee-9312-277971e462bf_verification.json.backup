{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":781,"exploitInstructions":"Investigate further with additional input to determine if SQL injection is possible. (see SQL injection for additional information).","verificationInstructions":"<b>Verification Instructions</b>\n\nIf the finding is from automated scans, review the information from the scan to determine if it is a valid database error message (rather than a false positive based on a manual page, etc.).\nAfter determining what input triggered the error initially, recreate the error using a browser or Burp to repeat the request.\nEnsure that the vulnerable parameter is documented in CVM, and show the vulnerable request, and the response or a screenshot of the browser showing the error. \n\nInvestigate further with additional input to determine if SQL injection is possible. (see SQL injection for additional information).\n\n<b>Reporting Requirements</b>\n<ol><li>Show initial page</li>\n<li>Show injection in HTTP request</li>\n<li>Show the error message</li>\n<li>If SQL injection is not possible, add an explanation regarding that</li>\n</ol>\n","remediationInstructions":"Design and add consistent error handling mechanisms that can handle any user input to the web application and providing meaningful detail to end-users. Do not display error messages that might provide sensitive information such as database names, table names, versions of database and software installed.\n","name":"Information Disclosure - Database Error Message","sourceId":"GID:3139","severity":"Medium","businessImpact":"The severity of this vulnerability depends on the information included within the error message, as well as what information can be gained by analyzing what causes the error message to appear.  Exposing sensitive information within error messages compromises the confidentiality of the affected system. If the error message can be leveraged to perform a successful SQL injection attack, this would result in the compromise of the confidentiality and integrity of the information within the associated database.","description":"A database error message was discovered in the application. Certain conditions, such as an application not handling unexpected user input correctly, can cause database server error messages to be displayed to the user. Database error messages display sensitive information that may allow an attacker to determine information that can be used to research further attacks, such as the type and version of database in use, database table names and content, and the type and version of software used to connect to the database.\n\nAn attacker could analyze the application's behavior by submitting different inputs to the server. Based on the database error messages, an attacker could be able to identify other potential weaknesses in the application, such as SQL injection vulnerabilities.\n"}}}