{"default_url":null,"content":{"state":0,"taskInstructions":"<h3>Instructions:</h3>\nCopy the following template and fill out as many topics as possible within a single comment.\n\n<h3>Template:</h3>\n<ol><li>At a high-level, what does the application do?</li>\n<li>What environment is the pentest taking place in? Confirm this is non-production (unless explicitly a PRODUCTION pentest)?</li>\n<li>How is authentication handled (SSO, federated, in-app, Windows integrated)</li>\n<li>Confirm the scope of the pentest. Is anything explicitly OUT of scope?</li>\n<li>What are the different roles / user types within the application? What is the functional difference between these different roles? Confirm what roles will be provided for the pentest.</li>\n<li>Does the application support multiple tenants? If so, will we be provided user accounts in multiple tenants to perform cross-tenant authorization testing?</li>\n<li>Are there &quot;dynamic workflows&quot;? Meaning are their any specific parameters we need in order to retrieve specific results? (For example, test credit card numbers we should use, test account numbers, etc)</li>\n<li>File upload/download: What happens server-side when a file is uploaded (parsed, stored on disk, stored in the cloud? etc)?</li>\n<li>Does the client have any specific pieces of functionality that they would like extra attention given to?</li>\n<li>Are we allowed to edit/update/delete existing data?</li>\n<li>Does the application store any sensitive or regulated information? (e.g. SSNs, credit card numbers, industry secrets, PHI)</li>\n<li>Are there any links or connections to other applications or 3rd party sites that should be avoided?</li>\n<li>Application architecture (e.g., 2-tier, 3-tier) and infrastructure (e.g., language, framework, database)</li>\n<li>Are there any known vulnerabilities?</li>\n</ol>\n","references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":null}}