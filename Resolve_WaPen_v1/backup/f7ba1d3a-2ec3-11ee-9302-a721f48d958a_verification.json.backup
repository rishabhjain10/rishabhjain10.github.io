{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":5049707,"exploitInstructions":"","verificationInstructions":"<b>Verification Instructions</b>\n\nThe underlying issue for Authorization Bypass - Client-Side Controls is most likely Insecure Direct Object Reference or Missing Function Level Access Controls. In most cases, those findings should be used instead of this.\n\nIf the client application relies on server responses to determine user access in the application, then the vulnerability can be reported as client-side control to make it clearer where the weakness in the application is. This is quite typical for Flash, Silverlight, etc. applications: after user signs in, the server responds with user access data that is used to construct the user interface and limit access to certain functions / data.\n\nTry manipulating server responses to enable functionality that should not be accessible to the user. This may require changing user roles, user ids, boolean values (false to true), etc.\n\n<b>Reporting Requirements</b>\n<ol><li>Add an explanation how client-side controls are used to control user access in the application</li>\n<li>Show how application data can be manipulated to escalate access</li>\n<li>Show access to unauthorized functionality or data</li>\n</ol>\n","remediationInstructions":"Ensure that strong access controls are in place to prevent unauthorized access to sensitive information and functionality.  Authorization checks should be performed prior to providing users access to web pages, information, and functionality within the application.  Any part of the application that relies on user input to return data should perform server-side authorization checks. Do not rely on authorization checks that are performed client-side, as the client may be able to manipulate and bypass these checks.  Ensuring that server-side authorization checks are in place will help prevent users from gaining unauthorized access to sensitive data and functionality within the application.\nUse client-side controls only as redundant authorization checks.\n","name":"Authorization Bypass - Client-Side Controls","sourceId":"M:9b981bbf-3895-e111-8397-001e4f120021","severity":"High","businessImpact":"An authenticated user could gain unauthorized access to sensitive data or functionality within the application.  The impact of a user bypassing authorization checks depends on the nature of the application as well as the data that is accessed.","description":"The application does not perform adequate server-side authorization checks. An authenticated user can gain unauthorized access to sensitive information or functionality by bypassing client-side controls within the application.\n"}}}