{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":21391,"exploitInstructions":"","verificationInstructions":"<b>Verification Instructions</b>\n\nUse a web proxy tool (e.g. Burp) and try converting the request method from POST to GET. If the server accepts the GET request and gives a response the same as it would to the POST, the server accepts POST parameters as GET parameters.\n\nIf Burp is unavailable, use another proxy tool to do the same thing; if you have to do it manually, just view the POST parameters with the proxy and copy/paste them into the URL. For example, 'arg1' and 'arg2' can be added as follows to whee.cgi:\n\nhttp://www.example.com/whee.cgi?arg1=some&amp;arg2=thing\n\n<b>Reporting Requirements</b>\n<ol><li>Screenshot POST request</li>\n<li>Screenshot POST request converted to GET request</li>\n<li>Show that the application processed the POST parameters as GET parameters</li>\n</ol>\n","remediationInstructions":"Do not allow POST parameters to be accepted as GET parameters.  User supplied information should always be passed in POST requests.\n","name":"POST Parameters Accepted as GET Parameters","sourceId":"WI:10655","severity":"Low","businessImpact":"Allowing POST parameters to be passed as GET parameters can make the web application more susceptible to cross-site request forgery (XSRF) attacks. XSRF attacks can be used to force a user into unknowingly submitting a request to the server.","description":"Some web frameworks handle the GET and POST parameters as a single collection. Allowing POST parameters to be submitted as GET parameters may facilitate cross-site request forgery attacks, as it may be easier to cause a target user to send a GET request than a POST request to the target server.\n"}}}