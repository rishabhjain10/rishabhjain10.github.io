{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":3108811,"exploitInstructions":"","verificationInstructions":"<b>Verification Instructions</b>\n\nApplication flow authorization bypass identification is unique for every application. Typically, it does not require parameter manipulation but rather manipulation of the sequence of events in the application.\n\nClassic example:\n\nOnline store collect order info, address info, payment info, and order confirmation on separate pages. Application flow can be manipulated by entering order info and address info, then bypassing payment info page by confirming the order by browsing to the confirmation page.\n\n<b>Reporting Requirements</b>\n<ol><li>Add multiple scenarios for \"unique\" authorization bypass issues</li>\n<li>Add a description that explains how authorization bypass is exploited</li>\n<li>Show data or functionality that is accessible to a certain user</li>\n<li>Show how data or functionality that is not accessible to the user can be accessed</li>\n<li>Show the impact</li>\n</ol>\n","remediationInstructions":"Ensure that strong access controls are in place to prevent unauthorized access to sensitive information and functionality.  Authorization checks should be performed prior to providing users access to web pages, information, and functionality within the application.  Any part of the application that relies on user input to return data should perform server-side authorization checks. Do not rely on authorization checks that are performed client-side, as the client may be able to manipulate and bypass these checks.  Ensuring that server-side authorization checks are in place will help prevent users from gaining unauthorized access to sensitive data and functionality within the application.\n","name":"Authorization Bypass - Application Flow","sourceId":"M:3108811","severity":"High","businessImpact":"An authenticated user could gain unauthorized access to sensitive data or functionality within the application. The impact of a user bypassing authorization checks depends on the nature of the application as well as the data that is accessed.\n","description":"An authenticated user can gain unauthorized access to sensitive information or functionality by manipulating the flow of the application.\n"}}}