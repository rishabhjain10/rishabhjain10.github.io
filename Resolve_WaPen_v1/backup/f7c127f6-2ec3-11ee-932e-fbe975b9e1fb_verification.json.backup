{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":17051558,"exploitInstructions":"","verificationInstructions":"","remediationInstructions":"When hashing sensitive information use, a per record salt to ensure hashes are unique. If possible also incorporate a per application salt that is not stored within the database to further protect hashes from offline attacks. Consider using hashing algorithms, such as bcrypt or scrypt, that require increased computation power to brute-force.\n","name":"Weak Encryption or Hashing - Database","sourceId":"M:00d4b9ec-00e4-e211-ba22-001e4f12001e","severity":"Medium","businessImpact":"A user may be able to infer or brute force the hashes to gain access to the sensitive information. ","description":"Sensitive data is stored in the database using a hashing algorithm. It is possible to identify the hashing algorithm and generate valid hashes by reviewing a sample set of hashes. It is also possible to infer when multiple record sets contain the same information by comparing the hashed values. If the hash is being used on a password field, this may disclose weak or default passwords.\n"}}}