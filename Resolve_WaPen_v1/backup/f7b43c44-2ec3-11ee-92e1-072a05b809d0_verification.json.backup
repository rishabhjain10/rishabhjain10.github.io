{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":17053737,"exploitInstructions":"","verificationInstructions":"<b>Verification Instructions</b>\n\nInspect HTTP responses to determine whether the Strict-Transport-Security header is missing.\n\nHSTS header cannot be set on applications that work over HTTP. If Cleartext Protocol - HTTP is reported, missing HSTS header can be reported but the verification should include a note stating that when Cleartext Protocol - HTTP is fixed, HSTS should be set as well.\n\nOn pure API tests without a browser-based user interface, HSTS is not required as it does not affect API calls.\n\n<b>Reporting Requirements</b>\n<ol><li>Add an explanation whether the header is missing throughout the application (no Affected URLs list) or only on certain pages (include Affected URLs list)</li>\n<li>Show sample HTTP response header without Strict-Transport-Security</li>\n</ol>\n","remediationInstructions":"Configure the web application to include Strict-Transport-Security header in every response generated by an HTTPS-enabled site. Any HTTP version of site on the same domain should permanently redirect to the secure encrypted site. For HTTP sites on the same domain, the header should not be added to the HTTP response, but to do a permanent redirect (301 status code) to the HTTPS site.\n\nExample of the HTTP strict transport security header:\n\n<ncode>Strict-Transport-Security: max-age=31536000\n</ncode>\n\nIf all subdomains are HTTPS, then the following header is applicable: \n\n<ncode>Strict-Transport-Security: max-age=31536000; includeSubDomains\n</ncode>\n\nIt is important to note that this header does not prevent attack scenarios during the very first connection to the site or any connections established after the set period has expired. To prevent such a scenario, the site must be added to the pre-loaded HSTS hosts list embedded in both Google Chrome and Mozilla Firefox browsers.\n","name":"Missing HTTP Header - Strict-Transport-Security","sourceId":"WI:11365","severity":"Low","businessImpact":"A successful MiTM attack such as SSLStrip or SSLsniff can lead to the compromise of sensitive user data such as financial information, Social Security Number, personal information etc. as well as grant unauthorized access to user accounts enabling attackers to perform privileged actions on client's behalf.","description":"An HTTP Strict-Transport-Security (HSTS) header directs client browsers to only accept communication with the web server over an encrypted SSL/TLS connection for a set period. Additionally, any further requests over unencrypted HTTP by the browser will automatically be converted to encrypted HTTPS.\n\nConsider following attack scenarios:\n<ul><li>Users often omit the URI scheme i.e., https:// when typing a URL in location bar to access a website. Also, third party websites can link to the site using the http scheme instead of https. This could result in an initial connection to a HTTPS-enabled site over an unencrypted channel. An eavesdropping attacker can hijack this unencrypted connection and replace the intended use of HTTPS protocol with HTTP in an attack known as SSLStrip, granting unauthorized access to all subsequent traffic.</li>\n<li>Websites often transfer non-sensitive resources such as help documents over an unencrypted HTTP connection. Any cookies without a secure flag are sent along with such requests potentially disclosing sensitive user and session data to eavesdropper.</li>\n<li>Man-in-the-Middle attacks that exploit user tendencies to override invalid certification warnings, e.g., SSLSniff.</li>\n</ul>\nFor web sites configured with an accurate HSTS policy, browsers automatically upgrade any HTTP connections to HTTPS. Furthermore, browsers prevent users from overriding any host certificate warnings. HSTS offers an effective defense against above attack scenarios.\n"}}}