{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":21273,"exploitInstructions":"","verificationInstructions":"<b>Verification Instructions</b>\n\nSubmit a URL in the parameter value to the vulnerable website. If successful, the client will be redirected to a page of the attacker's choice.\n\nExample:\nA script usually has three components:\n<ul><li>The name of the script (redirect.cgi).</li>\n<li>The parameter of the script (redirect.cgi?url=).</li>\n<li>The value of the parameter (redirect.cgi?url=http://www.netspi.com/).</li>\n</ul>\nBy passing a value of http://www.netspi.com to the parameter an attacker can redirect an unsuspecting user to a site of their choice.\n\nIf parameter based redirection issues are identified in POST requests, try converting POST to GET to see if the application accepts request parameters as GET parameters. Parameter based redirection in POST request is not really exploitable.\n\n<b>Reporting Requirements</b>\n<ol><li>Screenshot the vulnerable page</li>\n<li>Inject arbitrary URL (typically www.netspi.com) into the parameter</li>\n<li>Show that client browser is redirected to the injected URL</li>\n</ol>\n","remediationInstructions":"The following recommendations will help reduce the risk of parameter-based redirection attacks:\n<ul><li>Do not rely on the HTML meta refresh tag or HTTP redirection capabilities as a method of redirecting users to other sites specified by the user</li>\n<li>Always sanitize data returned from a user or other application components before storing or processing it or presenting it back to the application user.</li>\n<li>Maintain a list of valid \"redirection\" URLs.</li>\n<li>Ensure that all characters that could be interpreted as an executable language are replaced with their corresponding HTML encoded versions.</li>\n<li>Do not reference redirection URLs or alternative file paths within the browser's URL path.</li>\n<li>Do not use the Referrer header (or an equivalent) as a method of authorization or authentication.</li>\n<li>Inform users that they are leaving the web site with an intermediate warning page whenever the user navigates away from the affected web site.</li>\n</ul>\nFor CA's SiteMinder:\nTo configure agents to help protect your resources from phishing attempts that could redirect users to a hostile website, set the following configuration parameter:\n<ncode>ValidTargetDomain\n</ncode>\n\nThis parameter specifies the domains to which a credential collector is allowed to redirect users. If the domain in the URL does not match the domains set in this parameter, the redirect is denied. By default, this is disabled.\n\nThe <ncode>ValidTargetDomain </ncode>parameter identifies the valid domains for the target during processing. Before the user is redirected, the agent compares the values in the redirect URL against the domains in this parameter. Without this parameter, the agent redirects the user to targets in any domain. The <ncode>ValidTargetDomain </ncode>parameter can include multiple values, one for each valid domain.\n\nFor local agent configurations, specify an entry, one entry per line, for each domain, for example:\n<ncode>validtargetdomain=\".xyzcompany.com\"\nvalidtargetdomain=\".abccompany.com\"\n</ncode>\n","name":"Parameter Based Redirection","sourceId":"WI:10705","severity":"Medium","businessImpact":"Were a user to click on a maliciously crafted link sent by an attacker, the user would be redirected to a web site of the attacker's choosing. This could aid in phishing attacks or automated exploits of outdated or unpatched browsers. Were a user to fall victim to a phishing attack, their credentials could be stolen. If a user with an outdated or unpatched browser clicked on the URL, the attacker could potentially gain complete control over the system.","description":"It is possible to cause a user to be redirected to another URL of the attacker's choosing by manipulating a parameter.\n\nFor example, if the following example URL was sent to a user:\n\n<ncode>http://www.example.com/redirect.cgi?RedirectURL=www.PhishingWebsite.com\n</ncode>\n\nAn attacker could obfuscate the RedirectURL parameter to make it less obvious to the user that they would be redirected to a phishing site. A URL like this could be sent to users in a phishing e-mail; since the URL contains the domain of a valid web site (www.example.com), users may be less likely to recognize it as part of a phishing attack. Were a user to click on the URL, they could be redirected to a phishing site that looks exactly like www.example.com, but is the attacker's web site. This could also be used to redirect users to web sites with malicious software embedded in the page, to exploit outdated or unpatched browsers.\n"}}}