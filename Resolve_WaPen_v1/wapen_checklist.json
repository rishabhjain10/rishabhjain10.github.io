{
    "default_url": null,
    "content": {
        "categories": [
            {
                "ordinal": 0,
                "id": 351220,
                "name": "Application Information",
                "description": "Application information and interview questions for application walkthroughs",
                "categoryType": "Check All Items",
                "tasks": [
                    {
                        "name": "Update Resolve Information",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ac1f14-2ec3-11ee-92c1-bb3189b86581",
                        "ordinal": 1,
                        "masterFindingId": null,
                        "taskInstructions": "<h3>Requirement:</h3><br>First remove any checklist, then reattach the most up-to-date checklist. The most current checklist is:<b> 2020 - WaPen - Checklist</b><br><br><h3>Instructions:</h3><br>Verify the Project Type, Start Date, and End Date is properly set for this project.<br><b><red>Add any BU specific checklist</red></b><br>Set the Project Status to In Progress.<br>Set the Project Short Name.<br><br><h3>Previous Tests:</h3><br><ul><li>Review the client and/or Business Unit in Resolve for previous years to see if the application is been tested before.</li><br><li>Note any WAPens or ExPens that target the in-scope application.</li><br><li>Review all the previously identified vulnerabilities in any WAPens and test if they have been remediated.</li><br><li>Review the notes and checklists from the previous WAPens to help better understand any potential obstacles to overcome; migrate any relevant information to the new checklist and update it as necessary.</li><br></ul><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Start / Stop - Notification",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ab2050-2ec3-11ee-92be-479fb66ac413",
                        "ordinal": 2,
                        "masterFindingId": null,
                        "taskInstructions": "At the start of testing, send the client a note that testing is beginning. Resolve comments in the project are the preferred method of communication, but some clients exclusively use email.  <a href='https://outline.netspi.com/doc/start-message-template-f7KcaKhkA0'>Start message template</a>.<br><br>At the end of each day of testing, send the client a daily status update. This is a short summary of activities from the day along with some high-level finding information. <a href='https://outline.netspi.com/doc/daily-status-template-5vQOsuQnYX'>Daily status template</a>. <a href='https://outline.netspi.com/doc/daily-status-example-wapen-izrVoz808h'>Daily Status Example</a>.<br><br>At the end of testing on the final day, notify the client that testing is complete. Mention that the testing environment may still be accessed during the reporting phase. <a href='https://outline.netspi.com/doc/testing-complete-template-AnMpt7GyQD'>End message template</a>. <br><br>Additional information: <a href='https://outline.netspi.com/doc/ptaas-1pUNiMYtCo#h-communication'>https://outline.netspi.com/doc/ptaas-1pUNiMYtCo&#35;h-communication</a><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "API Information",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7abe152-2ec3-11ee-92c0-7f9b32b138ae",
                        "ordinal": 7,
                        "masterFindingId": null,
                        "taskInstructions": "When testing APIs without a frontend, request API documentation, preferably Postman collections, SoapUI projects, etc. with valid sample data.<br><br>If valid request or sample data cannot be provided for API endpoints, and no functional testing can be performed against the endpoints<br><ol><li>Notify the client that sample data is needed to perform proper testing against the endpoints; use Resolve comments to leave a written track record, email in addition if that's the client preference</li><br><li>Notify the PM that some of the testing cannot be completed without sample data; ask the PM to escalate with the client if they are not providing the data</li><br><li>If the client cannot provide valid test data within the testing window, note the untested endpoints in Resolve. </li><br><li>During reporting, note that some of the APIs could not be tested due to missing data in the Scope &amp; Timeframe section. If the API endpoint list is long, an appendix can be used to list the API endpoints instead of the Scope &amp; Timeframe section.</li><br></ol><br><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Application IP and URL*",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7a83a48-2ec3-11ee-92bd-ff5141fa3d85",
                        "ordinal": 5,
                        "masterFindingId": null,
                        "taskInstructions": "<h3>Instructions:</h3><br>Document any application IPs and URLs into the Comment section.<br><br>If there are multiple servers behind a load balancer, try to document both the load balancer IP, as well as many of the underlying machine IPs as possible<br><br>If there are specific connection requirements such as client VPN, connection through a NUC, etc., document all necessary information and instructions for another consultant to be able to connect.<br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": true,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Kickoff Information",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ac7216-2ec3-11ee-92c3-0bfe9f296c88",
                        "ordinal": 0,
                        "masterFindingId": null,
                        "taskInstructions": "<h3>Instructions:</h3><br>Copy the following template and fill out as many topics as possible within a single comment.<br><br><h3>Template:</h3><br><ol><li>At a high-level, what does the application do?</li><br><li>What environment is the pentest taking place in? Confirm this is non-production (unless explicitly a PRODUCTION pentest)?</li><br><li>How is authentication handled (SSO, federated, in-app, Windows integrated)</li><br><li>Confirm the scope of the pentest. Is anything explicitly OUT of scope?</li><br><li>What are the different roles / user types within the application? What is the functional difference between these different roles? Confirm what roles will be provided for the pentest.</li><br><li>Does the application support multiple tenants? If so, will we be provided user accounts in multiple tenants to perform cross-tenant authorization testing?</li><br><li>Are there &quot;dynamic workflows&quot;? Meaning are their any specific parameters we need in order to retrieve specific results? (For example, test credit card numbers we should use, test account numbers, etc)</li><br><li>File upload/download: What happens server-side when a file is uploaded (parsed, stored on disk, stored in the cloud? etc)?</li><br><li>Does the client have any specific pieces of functionality that they would like extra attention given to?</li><br><li>Are we allowed to edit/update/delete existing data?</li><br><li>Does the application store any sensitive or regulated information? (e.g. SSNs, credit card numbers, industry secrets, PHI)</li><br><li>Are there any links or connections to other applications or 3rd party sites that should be avoided?</li><br><li>Application architecture (e.g., 2-tier, 3-tier) and infrastructure (e.g., language, framework, database)</li><br><li>Are there any known vulnerabilities?</li><br></ol><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Confirm NO Akamai IPs are in scope*",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ac962e-2ec3-11ee-92c4-373d70c8deb5",
                        "ordinal": 6,
                        "masterFindingId": null,
                        "taskInstructions": "<h3>Instructions</h3><br>Confirm that no Akamai IPs are used.  Scanning Akamai places NetSPI's IP ranges into block lists.<br>Perform a whois lookup for Akamai IP ranges: https://whois.arin.net/ui/query.do and/or you can use the script below.<br><br><b>DO NOT</b> continue testing if you find that the application is behind Akamai - communicate with the client that not scanning Akamai is a requirement and we need the server IPs. If they have allow listed our IPs, post a screen shot of the email in this task as a comment.<br><br><h3><b>Variation: Automated Review</b> </h3><br>1. Download  and install netblock tool from  <a href='https://github.com/NetSPI/NetblockTool'>https://github.com/NetSPI/NetblockTool</a>.<br><br><code>git clone https://github.com/NetSPI/NetblockTool.git<br>cd NetblockTool &amp;&amp; pip3 install -r requirements.txt<br></code><br>2.  Below are the subsidiary options.<br><br><code>Company Subsidiaries:<br>    -s        Fetch subsidiary information and return netblocks of all subsidiaries in<br>                  addition to initial target<br>    -sn       Company name to use when fetching subsidiaries<br>    -sp       Use alternate parsing method when fetching subsidiary information; use<br>                  if the default method isn't working as expected<br>    -so       Write subsidiary information to a text file (CompanyName_subsidiaries.txt)<br></code><br>3. Run the tool with the desired options.<br><br><code>python3 NetblockTool.py -v Company -s -sn companyname<br></code><br>Below are some of the historical ranges.<br>AKAMAI (NET6-2600-1400-1)\t2600:1400:: - 2600:14FF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF<br>AKAMAI (NET-104-64-0-0-1)\t104.64.0.0 - 104.127.255.255<br>AKAMAI (NET-172-224-0-0-1)\t172.224.0.0 - 172.239.255.255<br>AKAMAI (NET-173-222-0-0-1)\t173.222.0.0 - 173.223.255.255<br>AKAMAI (NET-184-24-0-0-1)\t184.24.0.0 - 184.31.255.255<br>AKAMAI (NET-184-50-0-0-1)\t184.50.0.0 - 184.51.255.255<br>AKAMAI (NET-184-84-0-0-1)\t184.84.0.0 - 184.87.255.255<br>AKAMAI (NET-199-233-48-0-1)\t199.233.48.0 - 199.233.56.255<br>AKAMAI (NET-204-188-136-0-3)\t204.188.136.0 - 204.188.143.255<br>AKAMAI (NET-206-246-200-128-1)\t206.246.200.128 - 206.246.200.143<br>AKAMAI (NET-209-170-111-0-1)\t209.170.111.0 - 209.170.111.255<br>AKAMAI (NET-209-170-68-128-1)\t209.170.68.128 - 209.170.68.255<br>AKAMAI (NET-209-170-76-0-1)\t209.170.76.0 - 209.170.77.255<br>AKAMAI (NET-209-170-78-128-1)\t209.170.78.128 - 209.170.78.255<br>AKAMAI (NET-209-170-79-0-1)\t209.170.79.0 - 209.170.79.127<br>AKAMAI (NET-209-170-86-0-1)\t209.170.86.0 - 209.170.87.255<br>AKAMAI (NET-209-170-97-0-1)\t209.170.97.0 - 209.170.97.255<br>AKAMAI (NET-209-170-98-0-1)\t209.170.98.0 - 209.170.98.255<br>AKAMAI (NET-209-234-252-0-1)\t209.234.252.0 - 209.234.252.255<br>AKAMAI (NET-209-95-131-128-1)\t209.95.131.128 - 209.95.131.255<br>AKAMAI (NET-209-95-135-128-1)\t209.95.135.128 - 209.95.135.191<br>AKAMAI (NET-209-95-150-192-1)\t209.95.150.192 - 209.95.150.255<br>AKAMAI (NET-216-120-199-0-1)\t216.120.199.0 - 216.120.199.31<br>AKAMAI (NET-23-0-0-0-1)\t23.0.0.0 - 23.15.255.255<br>AKAMAI (NET-23-192-0-0-1)\t23.192.0.0 - 23.223.255.255<br>AKAMAI (NET-23-32-0-0-1)\t23.32.0.0 - 23.67.255.255<br>AKAMAI (NET-23-72-0-0-1)\t23.72.0.0 - 23.79.255.255<br><br> <br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": true,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Application Users and Roles*",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ac4d72-2ec3-11ee-92c2-633069eb6cc1",
                        "ordinal": 4,
                        "masterFindingId": null,
                        "taskInstructions": "<h3>Instructions:</h3><br>Document any credentials provided such as:<br><ul><li>username:password</li><br><li>2FA config/access/setup</li><br><li>ssh private keys</li><br><li>client certificates</li><br><li>email address(es) used</li><br><li>other relevant bits of data</li><br></ul><br><br>Update the credentials whenever they are changed (such as during password change/reset testing). This allows another consultant to jump into the application if/when needed.<br><br>Document any relevant authentication steps here (even if duplicated from Application Information)<br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": true,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Application Information",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ab90f8-2ec3-11ee-92bf-2f9c60151bc3",
                        "ordinal": 3,
                        "masterFindingId": null,
                        "taskInstructions": "During the kickoff call, take as many notes as possible; review the recording if you need to in order to make sure nothing was missed.<br>If the notes were not taken in Resolve directly, copy them over from whatever note taking tool (such as OneNote) you used.<br>This cannot be stressed enough: <b>do not rely on memory alone for all of these details.</b><br><br>The below can be used as a guide to which pieces of information to document, and which questions to ask during the demo: <br><ul><li>Document the application name and version.</li><br><li>What is the application used for, at a high level?  (e.g. online banking, document repository, medical record tracking etc.)</li><br><li>What is the application architecture, at a high level? (ask about web server, database, Web Application Firewall(s), load balancers) </li><br><li>What technologies used for the web server? (e.g. Java, ASP.NET, Tomcat, IIS etc.)</li><br><li>How is user authentication handled? (e.g. SSO, forms based, integrated)</li><br><li>Which user roles exist in the application and what's the function of each? </li><br><li>Is there any tenancy to the application? (e.g. tenant1 should not be able to see information for tenant2) </li><br><li>What kind of database integration? Database type? Authentication? (e.g. MSSQL with integrated auth, Oracle)</li><br><li>Does the application store any sensitive or regulated information? (e.g. SSNs, credit card numbers, industry secrets, PHI)</li><br><li>What information or functionality is limited to certain users? (e.g. user administration, PHI)</li><br><li>Is there any specific information needed to use the application? (e.g. valid client IDs, SSNs, valid credit cards)</li><br><li>What are the key functions in the application?</li><br><li>Are there any critical areas that should be focused on?</li><br><li>Are there any areas that are unstable or should be excluded? Pay particular attention to 3rd party components.</li><br><li>Is there specific application flow that has to be followed to properly use the application?</li><br><li>Are there any known vulnerabilities?</li><br></ul><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 8,
                "id": 351221,
                "name": "Broken Authentication",
                "description": null,
                "categoryType": "Check All Items",
                "tasks": [
                    {
                        "name": "Weak Password Reset or Recovery Functionality",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b0c212-2ec3-11ee-92d3-53cd2aca28ef",
                        "ordinal": 816,
                        "masterFindingId": 2989394,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Password Reset - Password in Email",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b07406-2ec3-11ee-92d1-b3f6abe0991e",
                        "ordinal": 813,
                        "masterFindingId": 17051124,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Cross-Site Request Forgery",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b22b8e-2ec3-11ee-92d9-432a82f42a6d",
                        "ordinal": 825,
                        "masterFindingId": 707,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Cookie - Cookie Scoped to Parent Domain",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7af9bd0-2ec3-11ee-92ce-f7a3401a15e0",
                        "ordinal": 811,
                        "masterFindingId": 4070054,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Administrative Interface Without Two-Factor Authentication",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b327be-2ec3-11ee-92dd-3b4b83347f81",
                        "ordinal": -1,
                        "masterFindingId": 17059627,
                        "taskInstructions": "Note for WaPens: <br>This finding is intended for administration logins which provide access to control the web server such as Apache Tomcat Manager, phpMyAdmin, etc. This finding is not applicable if standard application users and privileged/administrator application users share the same login. This finding may be applicable if there is a separate login mechanisms for both standard users and administrator users.  <br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Authentication Bypass - Parameter Manipulation",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b143a4-2ec3-11ee-92d5-f3e8f0d62b63",
                        "ordinal": 818,
                        "masterFindingId": 17051456,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Password Change - Missing Secondary Authentication",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b287d2-2ec3-11ee-92db-77eac50ba75a",
                        "ordinal": 820,
                        "masterFindingId": 488164,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Management - Session Fixation",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ada294-2ec3-11ee-92c6-dbf06d774a37",
                        "ordinal": 801,
                        "masterFindingId": 21616,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Two-Factor Authentication Bypass",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b16262-2ec3-11ee-92d6-f7078eb1bb7e",
                        "ordinal": 819,
                        "masterFindingId": 17058214,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Account Policy - Weak Password Policy",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b1a8c6-2ec3-11ee-92d7-dbc549a608fe",
                        "ordinal": 823,
                        "masterFindingId": 17058626,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Cookie - SSO Cookie Scoped to Parent Domain",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b01a24-2ec3-11ee-92d0-9b43eb9e2887",
                        "ordinal": 812,
                        "masterFindingId": 17055125,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Management - Insufficient Session Destruction",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7addea8-2ec3-11ee-92c7-1763ff48b4e8",
                        "ordinal": 803,
                        "masterFindingId": 21395,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Cookie - Persistent Cookie",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7aefebe-2ec3-11ee-92cb-031575701c7d",
                        "ordinal": 808,
                        "masterFindingId": 5050221,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Management - Session ID in URL",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ae38d0-2ec3-11ee-92c9-370a065281a9",
                        "ordinal": 804,
                        "masterFindingId": 22001,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Password Reset - Unmasked Security Question Answers",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b0a1a6-2ec3-11ee-92d2-b7f31fcb6a1b",
                        "ordinal": 814,
                        "masterFindingId": 17051122,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Cookie - HTTPOnly not Set",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ae94ec-2ec3-11ee-92ca-0f1d9e10ca1d",
                        "ordinal": 806,
                        "masterFindingId": 837,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Management - Logout Functionality Not Available",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b2dd90-2ec3-11ee-92dc-0f2dfc24900a",
                        "ordinal": 803,
                        "masterFindingId": 5050388,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Cookie - Secure not Set",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7af4dd8-2ec3-11ee-92cc-93aaf09df2bc",
                        "ordinal": 807,
                        "masterFindingId": 841,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Cookie - Predictable Session ID",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ae0770-2ec3-11ee-92c8-cf1c2d839171",
                        "ordinal": 809,
                        "masterFindingId": 17051555,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Management - Insufficient Session Expiration",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ad0064-2ec3-11ee-92c5-6710c37f16d3",
                        "ordinal": 802,
                        "masterFindingId": 21397,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Session Cookie - Insufficient Length",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7af711e-2ec3-11ee-92cd-2f36a73c07a5",
                        "ordinal": 810,
                        "masterFindingId": 21577,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Remember Me Functionality",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b0f9da-2ec3-11ee-92d4-f36a6eac5bb4",
                        "ordinal": 817,
                        "masterFindingId": 688826,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Account Policy - Weak Lockout Policy",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b26cac-2ec3-11ee-92da-7f156d5ff9d3",
                        "ordinal": 821,
                        "masterFindingId": 17051131,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Password Reset - Unlimited Tries",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7afd0be-2ec3-11ee-92cf-a72bd9d14d74",
                        "ordinal": 815,
                        "masterFindingId": 3389367,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "User Enumeration - Error Messages",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b209b0-2ec3-11ee-92d8-f3203a3fc694",
                        "ordinal": 824,
                        "masterFindingId": 690146,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 5,
                "id": 351222,
                "name": "Security Misconfigurations - Server and Application",
                "description": null,
                "categoryType": "Check All Items",
                "tasks": [
                    {
                        "name": "Weak or Default Password - Web Administration ",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b5b830-2ec3-11ee-92e9-1fffb9ac4481",
                        "ordinal": 715,
                        "masterFindingId": 162364,
                        "taskInstructions": "",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "POST Parameters Accepted as GET Parameters",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b4eea0-2ec3-11ee-92e4-3b89f7ddccf1",
                        "ordinal": 707,
                        "masterFindingId": 21391,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Missing HTTP Header - Content-Security-Policy",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b5681c-2ec3-11ee-92e7-272b1db3c877",
                        "ordinal": -1,
                        "masterFindingId": 17058084,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "SSL/TLS - Deprecated Protocol Usage",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b49874-2ec3-11ee-92e2-0b55197b8b36",
                        "ordinal": 705,
                        "masterFindingId": 715,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Admin Section Login is Publicly Accessible",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b599a4-2ec3-11ee-92e8-978215f1341a",
                        "ordinal": 714,
                        "masterFindingId": 677,
                        "taskInstructions": "Note for WaPens: <br>This finding is intended for administration logins which provide access to control the web server such as Apache Tomcat Manager, phpMyAdmin, etc. This finding is not applicable if standard application users and privileged/administrator application users share the same login. This finding may be applicable if there is a separate login mechanisms for both standard users and administrator users.  <br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "ASP.NET - ViewState without MAC Enabled",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b42056-2ec3-11ee-92e0-87950240b1b1",
                        "ordinal": 712,
                        "masterFindingId": 3389659,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Missing HTTP Header - Strict-Transport-Security",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b43c44-2ec3-11ee-92e1-072a05b809d0",
                        "ordinal": 703,
                        "masterFindingId": 17053737,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Directory Listing",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b51a2e-2ec3-11ee-92e5-ef9fac973c70",
                        "ordinal": 708,
                        "masterFindingId": 717,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "PUT Method - Arbitrary File Upload Allowed",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b3a6d0-2ec3-11ee-92df-2f5ecb4c1399",
                        "ordinal": 711,
                        "masterFindingId": 21369,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "SSL/TLS - Weak Encryption Ciphers",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b35400-2ec3-11ee-92de-f7c67fce034a",
                        "ordinal": 704,
                        "masterFindingId": 751,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Information Disclosure - Inadequate Cache Control",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b4b426-2ec3-11ee-92e3-53564d0debd6",
                        "ordinal": 706,
                        "masterFindingId": 488704,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Directory Listing - Default Directories",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b547ec-2ec3-11ee-92e6-e72448cfe42f",
                        "ordinal": 709,
                        "masterFindingId": 5049622,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 3,
                "id": 351223,
                "name": "WaPen - Injections",
                "description": "The injection category is intended for common injections that can affect any endpoint of the application. The category serves as a reminder of possible injections, and also has correct findings linked to them.",
                "categoryType": "Check All Items",
                "tasks": [
                    {
                        "name": "Cross-Site Scripting - Reflected",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b690e8-2ec3-11ee-92ec-93dd2c7103aa",
                        "ordinal": 302,
                        "masterFindingId": 709,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Server-Side Request Forgery - DNS Only",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b8a2b6-2ec3-11ee-92f9-4b01b9336de9",
                        "ordinal": 316,
                        "masterFindingId": 17055315,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Remote File Include",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b85db0-2ec3-11ee-92f7-ffa917a9ba5c",
                        "ordinal": 314,
                        "masterFindingId": 488229,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Arbitrary File Read",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b8261a-2ec3-11ee-92f6-070e3eaea823",
                        "ordinal": 313,
                        "masterFindingId": 5051201,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "LDAP Injection",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b7e0c4-2ec3-11ee-92f4-1ba48e5ef368",
                        "ordinal": 311,
                        "masterFindingId": 688753,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Insufficient Input Validation - Client-Side Controls",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b8dda8-2ec3-11ee-92fa-9b8141469b27",
                        "ordinal": 317,
                        "masterFindingId": 21823,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Parameter Based Redirection",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b7fb54-2ec3-11ee-92f5-63f3f56efbb8",
                        "ordinal": 312,
                        "masterFindingId": 21273,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Insufficient Input Validation",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b90896-2ec3-11ee-92fb-ab5a69cecb59",
                        "ordinal": 318,
                        "masterFindingId": 488151,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "OS Command Injection",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b77cb0-2ec3-11ee-92f1-83c293bc76cb",
                        "ordinal": 309,
                        "masterFindingId": 5050858,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "EL Injection",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b739a8-2ec3-11ee-92f0-278bdc9a174d",
                        "ordinal": 308,
                        "masterFindingId": 5051344,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Cross-Site Scripting - Persistent",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b6b05a-2ec3-11ee-92ed-371213b9656c",
                        "ordinal": 303,
                        "masterFindingId": 21825,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "XPath Injection",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b79a24-2ec3-11ee-92f2-d78298a4ca49",
                        "ordinal": 307,
                        "masterFindingId": 3389546,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "XML Injection",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b5ed32-2ec3-11ee-92ea-bb8532624cf5",
                        "ordinal": 306,
                        "masterFindingId": 5050075,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "XML External Entity Injection",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b708b6-2ec3-11ee-92ef-4b0636c09598",
                        "ordinal": 305,
                        "masterFindingId": 5050649,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "SQL Injection",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b6601e-2ec3-11ee-92eb-5fa0b4b01ead",
                        "ordinal": 301,
                        "masterFindingId": 877,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Server-Side Request Forgery",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b88236-2ec3-11ee-92f8-6f921eb88706",
                        "ordinal": 315,
                        "masterFindingId": 17055128,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Cross-Site Scripting - DOM Based",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b6e386-2ec3-11ee-92ee-0738428d4112",
                        "ordinal": 304,
                        "masterFindingId": 17051556,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Directory Traversal",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b7b446-2ec3-11ee-92f3-e7e19951002e",
                        "ordinal": 310,
                        "masterFindingId": 21930,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 7,
                "id": 351224,
                "name": "Application Functionality",
                "description": null,
                "categoryType": "Check All Items",
                "tasks": [
                    {
                        "name": "File Upload - Unvalidated File Allowed",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b92420-2ec3-11ee-92fc-a74442f0d199",
                        "ordinal": 601,
                        "masterFindingId": 17054637,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "File Upload - OS Command Execution",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b9608e-2ec3-11ee-92fd-8bc6aa56ce20",
                        "ordinal": 602,
                        "masterFindingId": 17054413,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "CAPTCHA - Application Logic Error",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b9800a-2ec3-11ee-92fe-33f863fcbc62",
                        "ordinal": 603,
                        "masterFindingId": 3609771,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 4,
                "id": 351225,
                "name": "Broken Authorization",
                "description": null,
                "categoryType": "Check All Items",
                "tasks": [
                    {
                        "name": "Authorization Bypass - Client-Side Controls",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ba1d3a-2ec3-11ee-9302-a721f48d958a",
                        "ordinal": 404,
                        "masterFindingId": 5049707,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Excessive Privileges - Web Application User",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ba4df0-2ec3-11ee-9303-57c31225db63",
                        "ordinal": 405,
                        "masterFindingId": 17055074,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Authorization Bypass - Missing Function Level Access Controls",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b9a904-2ec3-11ee-92ff-ebce46696273",
                        "ordinal": 401,
                        "masterFindingId": 17055623,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Authorization Bypass - Insecure Direct Object References",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b9c52e-2ec3-11ee-9300-4309dcd576b0",
                        "ordinal": 402,
                        "masterFindingId": 17056152,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Authorization Bypass - Application Flow",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7b9e694-2ec3-11ee-9301-0fc6cad2d1a5",
                        "ordinal": 403,
                        "masterFindingId": 3108811,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 9,
                "id": 351226,
                "name": "Web Services",
                "description": null,
                "categoryType": "None",
                "tasks": [
                    {
                        "name": "Information Disclosure - Web Service Response",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bacbe0-2ec3-11ee-9307-430729333c5e",
                        "ordinal": 905,
                        "masterFindingId": 4069743,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Web Services - General Note",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ba8a7c-2ec3-11ee-9305-f7c3225fecc3",
                        "ordinal": 901,
                        "masterFindingId": null,
                        "taskInstructions": "-- Description --<br><br>Test web services for injections and authorizations the same way as web applications are tested. Validate that TLS is used if sensitive information transferred, and ensure that session management is done securely.\r<br> \r<br>Test Content-Type on RESTful web services; can application/json be changed to application/xml; if so, test for XXE.\r<br>\r<br>SOAP payloads most often contain lots of parameters (such as namespace definitions) that do not need to be tested repeatedly with automated tools. Use Burp Intruder to mark specific injection points, and use Burp Scanner to test just those injection points. Alternatively use Burp Intruder fuzzing templates to test all meaningful parameters.\r<br>\r<br>In JSON requests, enclose all parameter values in double quotes prior to fuzzing; it is common that integer fields are not in quotes but the endpoint may accept strings as well.\r<br>\r<br>WCF may use msbin1 serialization for web services requests. Deserializer is available at https://github.com/NetSPI/burp-plugins/tree/master/BurpWCFDser.",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "XML External Entity Injection",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7ba6182-2ec3-11ee-9304-232925250091",
                        "ordinal": 904,
                        "masterFindingId": 5050649,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Web Services - No Authentication",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7baf70a-2ec3-11ee-9308-8b0fda7ce90a",
                        "ordinal": 903,
                        "masterFindingId": 17068086,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Information Disclosure - Web Services Definition File",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7baaf34-2ec3-11ee-9306-1f873f7fc087",
                        "ordinal": 902,
                        "masterFindingId": 21401,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 2,
                "id": 351227,
                "name": "Automated Scanning",
                "description": "",
                "categoryType": "Check All Items",
                "tasks": [
                    {
                        "name": "Burp Suite Configuration Setup",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bb259a-2ec3-11ee-9309-db39cacfdcb5",
                        "ordinal": 1,
                        "masterFindingId": null,
                        "taskInstructions": "<h3>Burp Suite Setup Instructions:</h3><br><ol><li>Ensure Burp is at the latest version. Click Help -&gt; Check for updates</li><br><li>Load the <a href='https://outline.netspi.com/doc/burp-suite-pro-N9NzFlicQU'>NetSPI Standard Burp Project Configurations file</a>:</li><br><li class='depth1'>Setting &gt; Manage Global Settings &gt; Project Settings &gt; Load Project Settings</li><br><li>Install Burp Extensions from the <a href='https://outline.netspi.com/doc/burp-suite-pro-N9NzFlicQU'>up-to-date list maintained in Outline</a></li><br><li>Confirm Burp Collaborator is reachable by running a health check.</li><br></ol><br><br><h3>Burp Suite Active Scanning Setup:</h3><br><ol><li>Set the Scope:</li><br><li class='depth1'>Target &gt; Site Map &gt; Right-click the item and select &quot;Add to Scope&quot; for each location that is considered in scope.</li><br><li class='depth1'>Target &gt; Scope settings &gt; Check Advanced Scope Control &gt; Click Add and manually enter all the details that matches the scope of the project.</li><br><li>Create new Audit Configurations:</li><br><li class='depth1'>Dashboard &gt; Click the &quot;Gear&quot; under Live audit from Proxy &gt; Scan configuration &gt; New &gt; <b><red>Cookies_Headers</red></b></li><br><li class='depth2'>Under Insertion Point Types &gt; Uncheck everything except <b>Cookie parameter values</b> and <b>HTTP Headers</b></li><br><li class='depth2'>Under Misc Insertion Point Options &gt; Change the maximum to 1000</li><br><li class='depth1'>Dashboard &gt; Click the &quot;Gear&quot; under Live audit from Proxy &gt; Scan configuration &gt; New &gt; <b><red>NO_Cookies_Headers</red></b></li><br><li class='depth2'>Under Insertion Point Types &gt; Uncheck <b>Cookie parameter values</b> and <b>HTTP Headers</b></li><br><li class='depth2'>Under Misc Insertion Point Options &gt; Change the maximum to 1000</li><br></ol><br><h3>Instructions:</h3><br><ol><li>Scan a request that includes all cookies and headers used by the application using the new Cookies_Headers Audit Configuration.</li><br><li>Scan all application pages that accept parameters with the NO_Cookies_Headers Audit Configuration.</li><br><li>To scan a single request, right-click on a request in the Proxy tab/Repeater tab &gt; Do active scan.</li><br><li>You can scan multiple requests at the same time by holding Control while selecting the requests, then right-clicking, and selecting Do an active scan.</li><br><li>Monitor automated scans in Logger to ensure that the session stays active. Especially when many scans are queued or they just go slowly.</li><br></ol><br><h3>Session Refreshing (as needed):</h3><br>Create a Login macro following these instructions:<br><ol><li>Settings &gt; Sessions &gt; Macros</li><br><li>Click Add and name the new macro &quot;Login refresh&quot; or similar</li><br><li>In the Macro Recorder window that appears (if it doesn't, click the Record Macro button), select the request(s) necessary to successfully authenticate; if there are redirects as part of the natural flow only the original request that submits the username and password is necessary.</li><br><li>Click OK with the appropriate requests selected and Click OK after giving the Macro a name.</li><br></ol><br>Configure a Session Handler to use the macro from above to automatically submit the login macro when the session has expired:<br><ol><li>Settings &gt; Sessions &gt; Session Handling Rules</li><br><li>Click Add and give the rule a description or name such as &quot;Refresh session.&quot;</li><br><li>Under Rule Actions &gt; Add &gt; Select &quot;Check Session is Valid&quot; from the drop down</li><br><li>In the pop up window, leave &quot;Issue current request&quot; selected</li><br><li>Check &quot;Validate Session every X requests&quot;</li><br><li class='depth1'>This can be altered later if the session isn't being refreshed often enough</li><br></ol><br>Next, select the appropriate location in the request for Burp to search for clues whether the session is valid or not. This requires knowing how the application responds to an expired session. You can figure this out either by making an authenticated request without cookies/auth headers, letting the session expire and submitting an old request, or logging out and submitting an old request. Configure the expression to match as uniquely as possible with the response without being too large. Use a simple string match and case sensitive match if possible to reduce the processing time.<br><br>Configure behavior dependent session validity section:<br><ol><li>The &quot;If session is valid...&quot; box will be automatically checked and greyed out</li><br><li>Check the &quot;If session is invalid...&quot; box and leave Run a macro in the drop down</li><br><li>Select the macro from earlier steps</li><br><li>Configure the options for updating based on the response. Typically this only involves unchecking the &quot;Update current request parameters...&quot; and finish by clicking OK</li><br><li>Click the Scope tab &gt; select all tools you'd like to have a sessions refreshed automatically (typically everything except Proxy).</li><br><li>Under the URL Scope section, select Use Suite Scope and click OK.</li><br></ol><br><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Application Content Discovery",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bc406a-2ec3-11ee-930d-07f910ff90ab",
                        "ordinal": 2,
                        "masterFindingId": null,
                        "taskInstructions": "<h3>Instructions:</h3><br>Content discovery is finding directories and/or files that are not necessarily linked within the application. This discovery is done through brute force guessing and can be accomplished by various tools.<br><br><h3>Methods:</h3><br><b>Burp Suite - Content Discovery:</b><br><ol><li>Open Burp to Target -&gt; Site Map.</li><br><li>Right click on the top level site.</li><br><li>Select Engagement tools -&gt; Discover content.</li><br></ol><br><b>Burp Suite - Intruder:</b><br><ol><li>Send a request from the proxy to Intruder</li><br><li>Use either the default Burp Suite Directories payload list or <a href='https://github.com/fuzzdb-project/fuzzdb'>download FuzzDB</a> and use the directories payload list. Note: This likely will get caught by AV unless it's saved in C:\\tools (or /Users/{username}/tools on Mac).</li><br></ol><br><h3>Additional Methods (Optional):</h3><br><b>AutoDirbuster</b><br><ol><li>Check the <a href='https://github.com/NetSPI/AutoDirbuster'>NetSPI Github</a> page for the latest installation and usage instructions</li><br></ol><br><b>Nikto</b><br><ol><li><a href='https://cirt.net/nikto2'>Run nikto</a> from the command line with the -h flag, providing the URL of the web application.</li><br></ol><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Burp Findings and Artifact Files*",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bc0b0e-2ec3-11ee-930b-fffe08c999c9",
                        "ordinal": 5,
                        "masterFindingId": null,
                        "taskInstructions": "<h3>Instructions:</h3><br>There are <b>two separate files</b> that must be uploaded to Burp during a standard WAPEN: the <b><red>Burp findings</red></b> file which is an .xml file, and the <b><red>Burp project </red></b>file which is a .zip file.<br><br>Note: A comment on this item is mandatory in order for it to be checked Complete or NA. Either way, a comment will need to be added to affirm the presence or justify the absence of either of these files.<br><br><h3>Burp Findings (Sources):</h3><br>After all Burp scanning is complete, the findings that Burp has reported should be imported into Resolve.<br><ol><li>Do not FP findings within Burp; it is better to import all findings from Burp into Resolve and then FP there if necessary.</li><br><li>Within Burp &gt; Target &gt; Site map &gt; Right-click the in scope host(s) &gt; Issues &gt; and select Report Issues for this host.</li><br><li class='depth1'>Export data as XML; Uncheck Base64 request/responses</li><br><li class='depth1'>Continue to click Next until the .xml file has been saved locally</li><br><li>Within Resolve &gt; Sources &gt; click Add Data Source and upload the Burp .xml file.</li><br></ol><br><h3>Burp Project File (Artifacts):</h3><br><ol><li>When a project is ready for QA, close Burp and compress the Burp project file with zip.</li><br><li>Upload the zip file to the project workspace, using the Artifact upload feature.</li><br><li>After QA completes and the project is delivered, the Burp project file and zip can be deleted from your local storage.</li><br></ol><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": true,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Nessus",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bc302a-2ec3-11ee-930c-7b21dc9bbf08",
                        "ordinal": 0,
                        "masterFindingId": null,
                        "taskInstructions": "<h3>Instructions:</h3><br>Information with screenshots on how to run <a href='https://outline.netspi.com/doc/nessus-UGKRWpjzeh#h-running-scans'>Nessus Scans</a> is in the Outline.<br><br><h3>TL;DR</h3><br><ol><li>Visit passwords.netspi.com.</li><br><li>Search for &quot;Nessus&quot; and select a relevant record.</li><br><li>Note the Nessus URL, username, and password.</li><br><li>Browse to the NetSPI Nessus application and login.</li><br><li>For first time users, create a New Folder with the &quot;flast&quot; naming convention.</li><br><li>In your folder, click on &quot;New Scan&quot;.</li><br><li>Choose the updated scan profile to scan with. This scan will usually be named with the words &quot;NetSPI Standard&quot;.</li><br><li>Enter the name and targets. Click on &quot;Save&quot; or &quot;Launch&quot; to start the scan immediately.</li><br><li>Upon completion, browse to the overview of the completed scan. Click on &quot;Export&quot; and choose the Nessus export file.</li><br><li>Import the scan data into Sources tab in Resolve.</li><br></ol><br>Periodically review and delete unneeded Nessus scans from your folder.<br><br><h3>Nmap:</h3><br>If Nessus cannot be run (due to routing or internal only application), then an Nmap full TCP port scan should be performed from the local test machine.<br>An Nmap scan is not required if the Nessus scan is possible.<br><code>$ sudo nmap -p- -sS -A {target_endpoint} -oA {client_name}_FullTCP_Nmap<br></code><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Verification of Automated Scan Results",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bbf060-2ec3-11ee-930a-abbf058f76df",
                        "ordinal": 4,
                        "masterFindingId": null,
                        "taskInstructions": "Review and verify the results of the automated application scans. Pay extra attention to findings that allow anonymous access to any application content. Ensure that authenticated scans were able to identify content that requires authentication.<br>Refer to the checklist items corresponding to findings reported for more details and information on how to determine whether it's a false positive.<br><br><br>-- Description --<br><br>Many of the automated tools will come back with false positives. While it's difficult to tell what's going to be a false positive ahead of time, double checking is usually pretty easy: most tools will include the request submitted as well as the response, highlighting what about them indicates the vulnerability.<br>Knowledge of how the vulnerability works and why it trigged in the application will be needed to firmly determine if it's a false positive or not. You can refer to the checklist items below for the appropriate finding and look over the documentation, especially the Resources section, for more guidance on each finding. If you have any doubts, feel free to reach out to another consultant.",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 1,
                "id": 351228,
                "name": "Information Gathering",
                "description": null,
                "categoryType": "Check All Items",
                "tasks": [
                    {
                        "name": "User Agent Switching",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bcaa3c-2ec3-11ee-9310-7377c2299dfd",
                        "ordinal": 103,
                        "masterFindingId": null,
                        "taskInstructions": "Modify browser user agent to determine whether the application has a different web interface and potentially different backend functionality depending on the browser type.<br><br>Try normal web browser, iPhone, and Android user-agents. Also consider using search engine crawler User Agents, these sometimes allow access to authenticated pages.<br><br>With a little setup, you can run EyeWitness against a list of URLs and provide the <code>--cycle</code> flag with the appropriate type of user agents to try, such as \"Browser\", \"Mobile\", \"Crawler\", or even \"All\". Proxy through Burp Suite and use the Match & Replace to add headers/cookies for authenticated pages.<br><br>If additional application functionality is identified via user-agent switching, include identified functionality into the normal testing process (automated scanning and manual testing).<br><br><br>-- Description --<br><br>Web Applications will sometimes support and react to different User-Agents to provide compatibility or accessibility features based on the browser. For instance, mobile users may get a reduced window size with larger buttons that is more convenient for a touch screen. Different browsers support different features and render pages slightly differently, which can result in different pages being presented to the user. There is also the odd chance that the application will expose functionality to a client with a particular user agent.<br><br>Additionally, many web applications will allow crawling and indexing bots, such as Google or Bing, in to certain parts of the application which may otherwise require authentication; this can allow for bypasses and potentially expose sensitive information.<br><br><br>-- Tools --<br><br>Chrome / Firefox extension: User-Agent Switcher<br>Burp Suite: Proxy - Options - Match and Replace<br>https://tools.kali.org/web-applications/ua-tester<br>https://tools.kali.org/information-gathering/eyewitness<br>https://portswigger.net/burp/documentation/desktop/tools/proxy/options#match-and-replace",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Search Engines",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bc93c6-2ec3-11ee-930f-5beba218f3fe",
                        "ordinal": 102,
                        "masterFindingId": null,
                        "taskInstructions": "Use search engines in an attempt to identify site content that does not require authentication or has been indexed but might not be normally available via the application.<br><br>Limit search requests to certain domain:<br>site:www.netspi.com<br><br>Look for specific filetypes, such as pdf, docx, xml, xlsx, txt:<br>filetype:xml site:www.netspi.com<br><br>Look for certain parameters / strings in the URL:<br>inurl:/wp-content/ site:www.netspi.com<br>intitle: admin site:www.netspi.com<br><br>See the references for more information; the Google Hacking Database (GHDB) has useful pre-constructed searches while the wikipedia entry has a listing of useful operators.<br><br>Identified content should be tested normally; normal findings should be used to report potential issues.<br><br>If you construct a list of URLs from the google search results, you can pass it to EyeWitness to get a quick set of screenshots<br><br><br>-- Description --<br><br>Search engines crawl and index web pages as much as possible (and allowed, see robots.txt) to provide better search results. This, combined with the advanced search features supported by the likes of Google, allows us to find more interesting parts of the application in an easier and more wholesale fashion.<br><br><br>-- Tools --<br><br>metagoofil<br>EyeWitness",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Previous Application Tests",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bcba0e-2ec3-11ee-9311-dbd141c9bcb5",
                        "ordinal": 104,
                        "masterFindingId": null,
                        "taskInstructions": "Previous tests done for the client will have findings that provide a convenient starting point for testing, as well as help accelerate testing since less ground will need to be covered overall.<br><br>Search for the client in SharePoint (Resolve will also be a good resource for this depending on your access-level).<br>Note any WaPens or ExPens that target the in-scope application.<br>For ExPens, check any of the web application related findings and documents for anything regarding your application.<br>Review all the previously identified vulnerabilities in any WaPens and test if they have been remediated.<br>Review the notes and checklists from the previous WaPens to help better understand any potential obstacles to overcome; migrate any relevant information to the new checklist and update it as necessary.<br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Information Disclosure - Robots.txt",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bc6086-2ec3-11ee-930e-dbabdf683476",
                        "ordinal": 101,
                        "masterFindingId": 509,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 6,
                "id": 351229,
                "name": "Sensitive Data Exposure",
                "description": "",
                "categoryType": "Check All Items",
                "tasks": [
                    {
                        "name": "Information Disclosure - HTML Source Code",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7be1f84-2ec3-11ee-931a-4f22b926d6e6",
                        "ordinal": 1,
                        "masterFindingId": 488456,
                        "taskInstructions": "Note that this finding is for reporting that sensitive information was disclosed via the HTML contents which are not visible on the webpage itself. For example, elements hidden by CSS, comments, etc. This finding is not intended to report the existing of source code within HTML. <br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Information Disclosure - Verbose Error Message",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bd778c-2ec3-11ee-9316-130a3387ef22",
                        "ordinal": 6,
                        "masterFindingId": 17058624,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Information Disclosure - Social Security Numbers",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bd37e0-2ec3-11ee-9314-efdde9e34a22",
                        "ordinal": 3,
                        "masterFindingId": 21349,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Cleartext Protocol - HTTP",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bd9ef6-2ec3-11ee-9317-ef7632c67377",
                        "ordinal": 0,
                        "masterFindingId": 17058625,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Information Disclosure - Database Error Message",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bcdd90-2ec3-11ee-9312-277971e462bf",
                        "ordinal": 5,
                        "masterFindingId": 781,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Sensitive Information Disclosure - Email Headers",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7be8780-2ec3-11ee-931c-b71486689dd2",
                        "ordinal": 10,
                        "masterFindingId": 17094902,
                        "taskInstructions": "<h3>Instructions:</h3><br>If the application sends an email to securitytesting@netspi.com as part of the enrollment, password reset functionality, or similar, check the email headers to see if any sensitive information is being disclosed.<br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Information Disclosure - Internal IP Address",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bdfd1a-2ec3-11ee-9319-172880a723c1",
                        "ordinal": 9,
                        "masterFindingId": 795,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Sensitive Information Disclosure - Server Response",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bdc02a-2ec3-11ee-9318-bf3a673cf993",
                        "ordinal": 8,
                        "masterFindingId": 17056267,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Information Disclosure - Server Path",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7be4e46-2ec3-11ee-931b-f7398878326d",
                        "ordinal": 7,
                        "masterFindingId": 825,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Information Disclosure - Unmasked Social Security Number",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bd63dc-2ec3-11ee-9315-efcdbb644d1c",
                        "ordinal": 4,
                        "masterFindingId": 17058623,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Information Disclosure - Password in Server Response",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bd054a-2ec3-11ee-9313-7f657351dd65",
                        "ordinal": 2,
                        "masterFindingId": 5050191,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 11,
                "id": 351230,
                "name": "Technology Specific Attacks",
                "description": null,
                "categoryType": "None",
                "tasks": [
                    {
                        "name": "AWS - Sensitive Information Disclosure Through Metadata Service",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c0899a-2ec3-11ee-9327-4bafa2b80f8f",
                        "ordinal": 3,
                        "masterFindingId": 17062481,
                        "taskInstructions": "This finding specifically relates to gaining access to the AWS metadata service (169.254.169.254) through command injection, or SSRF. If you are able to find either type of issue in an app in AWS, make an HTTP request to http://169.254.169.254 and see if you get a response. The metadata can expose credentials for any roles applied to the EC2 instance, so you may be able to use them for escalating into the AWS environment. Find a CPen resource if you end up gaining access to credentials.<br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "AWS - S3 Directory Listing",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c01dfc-2ec3-11ee-9325-ab75db2db8ce",
                        "ordinal": 5,
                        "masterFindingId": 17065048,
                        "taskInstructions": "As you're testing your application, keep an eye out for any references to AWS S3 resources:<br><ul><li>https://my-bucket.s3.us-west-2.amazonaws.com/puppy.png</li><br><li>https://s3.us-west-2.amazonaws.com/mybucket/puppy.jpg</li><br></ul><br>Note that the examples above are for the &quot;my-bucket&quot; S3 bucket, and the &quot;puppy.jpg&quot; file<br>See here for additional URL info - https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-bucket-intro.html<br><br>There may also be DNS hostnames that point to S3 buckets. Keep an eye out for these as you may have to manually find the bucket name through your proxy logs.<br><br>Once you have a bucket identified, there are two ways to check for public permissions.<br><ol><li>Browse Anonymously</li><br><li>Try to list as an AWS IAM user</li><br></ol><br>To browse anonymously, just enter the bucket URL (https://s3.us-west-2.amazonaws.com/mybucket/) in your browser. If you get a list of file names (Keys), then it allows listing. If you can access the files, you have get actions enable as well.<br><br>For the IAM user, use an access key and secret (for a user in the NetSPI AWS account) to create a profile for the AWS CLI and execute the S3 ls command for the bucket to see if it allows all IAM users to list/access objects.<br><code>aws s3 ls s3://mybucket/<br></code><br>If you get back a list of files, the bucket allows authenticated principals to access the bucket.<br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "AWS - S3 Bucket Name Information Disclosure",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bf1ea2-2ec3-11ee-931e-afbfa154ecc3",
                        "ordinal": 4,
                        "masterFindingId": 17062480,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Azure - Storage Account SAS Token Expiration",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bfdc7a-2ec3-11ee-9324-3f171d8a0fed",
                        "ordinal": 9,
                        "masterFindingId": 17088271,
                        "taskInstructions": "If you identify a Blob storage SAS token URL (see below) in the application, checke the &quot;se&quot; parameter for the expiration on the SAS token.<br><br>In the example below, we can see that the token expires in 2040. Use the attached finding to call out the issue.<br><br><code>https://netspiexample.blob.core.windows.net/?sv=2020-08-04&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupitfx&amp;<b><red>se=2040-11-03T04:40:45Z</red></b>&amp;st=2020-11-02T20:40:45Z&amp;spr=https,http&amp;sig=tfTo6fdiC2e79wqf5gXOAY06Vb%2BAQXy2nBukQRH48kQ%3D<br></code><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "GraphQL Testing and Findings",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c08ba2-2ec3-11ee-9328-ebaadcd74abf",
                        "ordinal": 11,
                        "masterFindingId": null,
                        "taskInstructions": "<b>Instruction:</b><br>If your service uses GraphQL make sure to do specific GraphQL checks. This involves using GraphQuail or another tool to help visualize the schema.  Review the tool installation and Master Finding details for GraphQL at the bottom of the page at the following Outline page:<br><br><a href='https://outline.netspi.com/doc/graphql-testing-procedure-GRYBKabmWM'>GraphQL Testing Process</a><br><a href='https://outline.netspi.com/doc/graphql-testing-procedure-GRYBKabmWM#h-graphquail-setup'>GraphQuail Setup</a><br><br><b>Findings:</b><br>There is not a specific finding linked to this Checklist item. Instead, view the current GraphQL findings below and add the appropriate findings to your Workspace:<br><br><ul><li>(MF ID 23970) GraphQL - Introspection Enabled</li><br><li>(MF ID 24951) GraphQL - Development Console Exposed</li><br><li>(MF ID 43519) GraphQL - Large Query Depth Permitted</li><br><li>(MF ID 43782) GraphQL - Field Suggestions Enabled</li><br><li>(MF ID 47043) GraphQL - Password Flow Bypass</li><br><li>(MF ID 47044) GraphQL - Missing Functional Level Access Control</li><br><li>(MF ID 47045) GraphQL - Lack of Aliasing or Batching Limits</li><br></ul><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "JWT - Weak Signature Validation",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bf9148-2ec3-11ee-9322-b76fd1398b35",
                        "ordinal": 1,
                        "masterFindingId": 17062514,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "SAML - Weak Signature Validation",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bf5700-2ec3-11ee-9320-f72acd93e636",
                        "ordinal": 8,
                        "masterFindingId": 17059910,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Azure - Storage Account - Excessive SAS Token Permissions",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c06e56-2ec3-11ee-9326-2b173ab54ca0",
                        "ordinal": 10,
                        "masterFindingId": 17088270,
                        "taskInstructions": "If you identify a Blob storage SAS token URL (see below) in the application, check the &quot;sp&quot; parameter for the permissions on the SAS token.<br><br>In the example below, we can see that the token allows everything (rwdlacupitfx). Most importantly, look for read/write/list permissions, and where they're scoped (SS parameter). Use the attached finding to call out the issue. <br><br><code>https://netspiexample.blob.core.windows.net/folder/file.txt?sv=2020-08-04&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupitfx&amp;se=2020-11-03T04:40:45Z&amp;st=2020-11-02T20:40:45Z&amp;spr=https,http&amp;sig=tfTo6fdiC2e79wqf54XOAY06Vd%2BAQXy2nBukQRH48kQ%3D<br></code><br>In this case, you could modify the link for file.txt to the following link to list out the files in the &quot;folder&quot; directory:<br><code>https://netspiexample.blob.core.windows.net<b><red>/folder/?restype=container&amp;comp=list</red></b>&amp;sv=2020-08-04&amp;ss=bfqt&amp;srt=sco&amp;sp=rwdlacupitfx&amp;se=2020-11-03T04:40:45Z&amp;st=2020-11-02T20:40:45Z&amp;spr=https,http&amp;sig=tfTo6fdiC2e79wqf54XOAY06Vd%2BAQXy2nBukQRH48kQ%3D<br></code><br><br>For additional information on the SAS token parameters:<br><code>sv=2020-08-04 - Sig Version<br>ss=bfqt - Services Allowed<br>\t(B)lob<br>\t(F)ile<br>\t(Q)ueue<br>\t(T)able<br>srt=c - Allowed resource types<br>\t(s)ervice<br>\t(c)ontainer<br>\t(o)bject<br>sp=rwdlacupitfx - Allowed permissions<br>\t(R)ead<br>\t(W)rite<br>\t(D)elete<br>\t(L)ist<br>\t(A)dd<br>\t(C)reate<br>\t(U)pdate<br>\t(P)rocess<br>\t(I)mmutable storage<br>\tx - Enables deletion of versions<br>\tt - Allowed blob index permissions (R/W)<br>\tf - Allowed blob index permissions (Filter)<br>se=2021-11-03T03:38:51Z - End of Use<br>st=2021-11-02T19:38:51Z - Start of Use<br>spr=https - Allowed Protocol(s)<br>sig=8%2BpGGfE4ymEtDH8NfvXtlVp1gr3zLKwDcu8Ll%2FnkcRA%3D - Signature<br></code><br>",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "JWT - Excessive Token Lifetime",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bf785c-2ec3-11ee-9321-2395ea24298b",
                        "ordinal": 0,
                        "masterFindingId": 17062362,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "SAML - Token Replay",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bedb22-2ec3-11ee-931d-8f325dfa052f",
                        "ordinal": 7,
                        "masterFindingId": 17059909,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "AWS - Unauthorized Access to S3 Bucket",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bfbe0c-2ec3-11ee-9323-e34444bf7e9d",
                        "ordinal": 2,
                        "masterFindingId": 17062478,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "SAML - Assertion Lifetime too Long",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7bf37f2-2ec3-11ee-931f-9bf7861fa32f",
                        "ordinal": 6,
                        "masterFindingId": 17059647,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            },
            {
                "ordinal": 10,
                "id": 351231,
                "name": "Post Exploitation",
                "description": null,
                "categoryType": "None",
                "tasks": [
                    {
                        "name": "Post Exploitation - General Note",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c0c626-2ec3-11ee-932a-639beba57cfe",
                        "ordinal": 1000,
                        "masterFindingId": null,
                        "taskInstructions": "-- Description --<br><br>Post exploitation checks should be performed if access was gained to the application infrastructure during the testing. Typically this means either SQL injection or OS command execution on application servers.\r<br>Post exploitation testing should not be considered a full audit of the compromised system. Rather the testing focuses on identifying issues that are related to application deployment.",
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Encryption or Hashing - Database",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c127f6-2ec3-11ee-932e-fbe975b9e1fb",
                        "ordinal": 1005,
                        "masterFindingId": 17051558,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Unencrypted Storage of Sensitive Data - Card Holder Data",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c0f77c-2ec3-11ee-932c-975da6f5712d",
                        "ordinal": 1003,
                        "masterFindingId": 488471,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Weak Configuration - Insufficient Egress Filtering",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c0aa2e-2ec3-11ee-9329-3f6528034834",
                        "ordinal": 1001,
                        "masterFindingId": 17057663,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Unencrypted Storage of Sensitive Data - Social Security Numbers (SSN)",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c11694-2ec3-11ee-932d-636502791528",
                        "ordinal": 1004,
                        "masterFindingId": 690115,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Excessive Privileges - Database User Account",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c134bc-2ec3-11ee-932f-370ffff06124",
                        "ordinal": 1006,
                        "masterFindingId": 690117,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Unencrypted Storage of Passwords - Database",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c0d454-2ec3-11ee-932b-eb1482e9a1e7",
                        "ordinal": 1002,
                        "masterFindingId": 21267,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Excessive Privileges - Database Service Account",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c157b2-2ec3-11ee-9330-0fbece642fa8",
                        "ordinal": 1007,
                        "masterFindingId": 21980,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Excessive Privileges - OS Service Account",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c19420-2ec3-11ee-9332-3fe3d8ce79d0",
                        "ordinal": 1009,
                        "masterFindingId": 3088816,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    },
                    {
                        "name": "Excessive Privileges - Database Link",
                        "state": 0,
                        "comments": 0,
                        "uid": "f7c17986-2ec3-11ee-9331-33c561fba94f",
                        "ordinal": 1008,
                        "masterFindingId": 3389068,
                        "taskInstructions": null,
                        "isTaskInstructionsVisible": true,
                        "isCommentMandatory": false,
                        "hasRelatedInstances": false
                    }
                ],
                "fields": []
            }
        ],
        "totalTasks": 118,
        "naTasks": 0,
        "completedTasks": 0,
        "status": 1,
        "checklistStatusList": [
            {
                "name": "New",
                "id": 0
            },
            {
                "name": "In Progress",
                "id": 1
            },
            {
                "name": "Complete",
                "id": 2
            }
        ],
        "templates": [
            "19c09621-b683-e911-8109-ecf4bbd04073"
        ]
    }
}
