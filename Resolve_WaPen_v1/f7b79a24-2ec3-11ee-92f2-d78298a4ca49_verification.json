{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":3389546,"exploitInstructions":"","verificationInstructions":"<b>Verification Instructions</b><br>XPath injection often seems like a SQL injection; the same injections cause errors in the application or result in valid queries. Injecting single quote should result in an error, two single quotes should result in a valid query, and ' and 'a'='a should also result in a valid query. To determine that the injection is actually an XPath injection, try using XPath specific functions that result in valid queries such as<br><ul><li>' and string-length('aaa')=3 and 'a'='a</li><br><li>' and string-join(('aaa','bbb'))='aaabbb</li><br></ul><br>Data enumeration via XPath injection is very slow. Try XPath Blind Explorer. If it doesn't work, create a PoC injection that demonstrates susceptibility to XPath injection typically by causing an error message.<br><br>In rare cases XPath 2.0 is used. Try doc function to connect to external resources:<br>doc(concat(\"http://209.118.108.216/test\",'test')) <br><br><b>Reporting Requirements</b><br><ol><li>Screenshot the initial page</li><br><li>Show initial HTTP request</li><br><li>Show modified HTTP request that contains the XPath injection</li><br><li>Show access to XML content that should not be accessible to the user or XPath errors caused by injections</li><br></ol><br><b>Further Testing</b><br>If doc function work, and if outbound connectivity, report insufficient egress filtering. Additionally, try capturing NTLM hashes.<br><br><b>References</b><br>https://www.owasp.org/index.php/XPATH_Injection<br>https://media.blackhat.com/bh-eu-12/Siddharth/bh-eu-12-Siddharth-Xpath-WP.pdf<br><br><b>Tools</b><br>XPath Blind Explorer<br>","remediationInstructions":"Strictly define the data type (for instance, a string, an alphanumeric character, etc.) that the application will accept to prevent data from being accessed inappropriately. Also, ensure that all data used by the application is put through a data input filter that removes potentially harmful characters. Best practice recommends the use of allowlists using regular expressions.<br><br>Disable detailed error messages that could give an attacker information about XPath query or XML format. Replace the error message with a generic error asking the user to contact the IT department or send an e-mail to the web administrator.<br>","name":"XPath Injection","sourceId":"M:3389546","severity":"High","businessImpact":"Depending on the purpose for which the vulnerable query is being used, an attacker may be able to exploit an XPath injection flaw to read sensitive application data or interfere with application logic.  ","description":"XPath injection vulnerabilities arise when user-controllable data is incorporated into XPath queries in an unsafe manner. An attacker can supply crafted input to break out of the data context in which their input appears and interfere with the structure of the surrounding query.<br>"}}}