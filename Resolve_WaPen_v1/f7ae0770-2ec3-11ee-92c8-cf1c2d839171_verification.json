{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":17051555,"exploitInstructions":"","verificationInstructions":"<h3><b>Verification Instructions:</b></h3><br>Determine the session identifier that the application uses (typically a session cookie).<br><br>Review the cookie value in an effort to determine if it appears to contain predictable information. Custom cookies may be constructed in a way that may be reversed or manipulated to gain access to the application as a different user. Look for any information in cookies that appears to be related to the userID, user role etc. <br><br>Use Burp Sequencer to set the cookie value a few hundred times - let Sequencer analyze the cookie values to see if they have sufficient entropy<br><br><h3><b>Reporting Requirements:</b></h3><br><ol><li>Add a description explaining why the cookie is predictable, explaining the bits of entropy and approximately how long it will take to guess. (see Additional Information below)</li><br><li>Show HTTP response that sets the cookie</li><br><li>Use Burp Suite and Sequencer. </li><br><li class='depth1'>Show all steps to send the request to Sequencer.</li><br><li class='depth1'>Show the entropy after 1000+ cookies.</li><br><li>If the cookie can be manipulated, add additional details explaining how the cookie was manipulated and what kind of access was achieved</li><br></ol><br><h3>Additional Information:</h3><br>Whether you report on low entropy depends on the effective bits. Here is some context from <a href='https://owasp.org/www-community/vulnerabilities/Insufficient_Session-ID_Length'>OWASP</a>:<br><ul><li>An attacker guessing 1,000 cookies a second, with 10,000 valid cookies and an entropy of <b>32 bits</b> would take 7 minutes.</li><br><li>An attacker guessing 10,000 cookies a second, with 100,000 valid cookies and an entropy of <b>64 bits</b> would take 292 years.</li><br></ul><br>There are 3 main factors:<br><ul><li>The number of cookies you can guess per second</li><br><li>The number of valid cookies</li><br><li>The number of bits of entropy for the cookie</li><br></ul><br>The first two are hard to predict, but generally the more popular the site, the higher bandwidth attacks are possible, and the<br>more valid cookies there will be. Generally, report on anything lower than 64 bits of entropy for a high sensitivity environment. Anything lower than 48 for any other environment could be guessed in feasible time.<br><br><h3>Formula:</h3><br>The formula below can be used to get the value in seconds, ensure you change this to the most practical time unit. <br><code>(2B+1)/(2AS)<br></code><br>Where:<br><ul><li>B is the number of bits of entropy in the session identifier.</li><br><li>A is the number of guesses an attacker can try each second.</li><br><li>S is the number of valid session identifiers that are valid and available to be guessed at any given time.</li><br></ul><br>","remediationInstructions":"Configure the affected web application such that it generates session IDs that meet the following requirements:<br><ul><li>Session IDs must be at least 20 characters in length</li><br><li>Session IDs should be random values and should not include user details</li><br><li>Session IDs must be not easily guessable via statistical analysis</li><br></ul><br>","name":"Weak Session Cookie - Predictable Session ID","sourceId":"M:4cead1e4-f4e3-e211-ba22-001e4f12001e","severity":"High","businessImpact":"Were an attacker to successfully guess a valid session ID, the attacker could take actions in the context of the affected logged on user. The severity of this issue depends on the level of access the user has within the application, as well as the nature of the application itself.","description":"The application uses predictable session cookies. Due to the lack of entropy it is possible to predict valid cookie values based on an invalid cookie value.<br>"}}}