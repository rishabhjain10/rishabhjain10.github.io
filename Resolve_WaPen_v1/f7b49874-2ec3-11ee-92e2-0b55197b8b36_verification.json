{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":715,"exploitInstructions":"","verificationInstructions":"<h3>Verification Requirements:</h3><br>Run the following tool against the in-scope endpoint(s).<br><br><b>(Recommended) Option: testssl.sh</b><br><a href='https://github.com/drwetter/testssl.sh'>https://github.com/drwetter/testssl.sh</a><br><code>./testssl.sh [host|host:port|URL|URL:port]<br></code><br><b>Option 2: Nmap</b><br><code>nmap --script ssl-enum-ciphers -p 443 x.x.x.x<br></code><br><br><h3>Reporting requirements:</h3><br>Report and highlight any of the following deprecated protocols:<br><ul><li>SSLv2</li><br><li>SSLv3</li><br><li>TLSv1.0</li><br><li>TLSv1.1</li><br></ul><br><br> <br><b>Bulk Verification (EXPEN):</b><br>Autofier <br>https://github.com/NetSPI/Autofier<br><br>In your project in Resolve, navigate to Findings. Add columns for MasterFindingId, IP Address, and Port if they're not already there. Don't worry about removing columns or adding additional ones. Autofier will figure it out. Export the CSV file of the findings. Change the &quot;Master Finding ID&quot; column header to &quot;MasterFindingId&quot; so the tool can parse it correctly. <br><br>Run the tool against the list of findings.<br><br>Once the tool has ran and you have the output CSV, follow these steps:<br>1. Change all findings to False Positive. <br>2. Add a manual instance of the finding.<br>3. Choose Multiple Assets, Bulk Upload Assets, and Upload IP Addresses<br>4. Open the CSV in Excel. Select the IP address and port of the assets which Failed. (Double check the &quot;name&quot; field and make sure you're only selecting the correct findings.) Format them as IP:Port (  =CONCAT(D2,&quot;:&quot;,E2)    ) and paste them into the &quot;Upload IP Addresses&quot; field.<br>5. Check the &quot;Update existing duplicate instances&quot; box, and under Instance Information, set the State to &quot;Final&quot;<br>6. Click &quot;Add Instance&quot;<br>7. Do a couple of spot checks to make sure the statuses in Resolve match what's in the tool output.<br><br>","remediationInstructions":"Disable the use of SSLv2.0 and SSLv3.0 as well as TLSv1.0 and TLSv1.1. Use TLSv1.3 and TLSv1.2 and set the latest protocol as preferred.<br>","name":"Weak Configuration - SSL/TLS - Deprecated Protocol","sourceId":"GID:4557","severity":"Medium","businessImpact":"If an attacker decrypted communications sent over a connection secured with a deprecated protocol, the confidentiality of information sent over this connection would be compromised.<br>","description":"SSL versions 2.0, 3.0 and TLS versions 1.0 and 1.1 contain several cryptographic flaws and have been deprecated.<br> <br>The following weaknesses have been identified in SSL 2.0:<br><ul><li>Weak MAC construction</li><br><li>Unnecessarily weakened &quot;export&quot; mode uses 40-bit authentication keys</li><br><li>The integrity of the SSL handshake is unprotected, making it possible to perform a man-in-the-middle attack to alter ciphers negotiated during the handshake</li><br><li>Reliance on TCP connection close; if a TCP FIN packet is forged and sent to the recipient, the recipient will be unaware that the connection ended illegitimately</li><br><li>Padding size is included in cleartext when using block ciphers</li><br><li>Compression is not used before encryption, which makes crypto analysis easier</li><br><li>Cross-protocol padding oracle attack (DROWN)</li><br></ul><br>The following weaknesses have been identified in SSL 3.0:<br><ul><li>Non-deterministic padding used in the CBC construction (POODLE)</li><br><li>Weak renegotiation of sessions, allowing man-in-the-middle attacks</li><br><li>Weak key derivation process</li><br><li>Relies on possible weak cryptographic primitives</li><br><li>Does not support ECDH and ECDSA algorithms</li><br><li>Man-in-the-middle initialization vector attacks against CBC-mode ciphers (BEAST)</li><br></ul><br>The following weaknesses have been identified in TLS 1.0:<br><ul><li>Non-deterministic padding used in the CBC construction (POODLE)</li><br><li>Man-in-the-middle initialization vector attacks against CBC-mode ciphers (BEAST)</li><br></ul><br>The following weaknesses have been identified in TLS 1.1:<br><ul><li>TLS 1.1 lacks support for current and recommended ciphers suites, and many vendors are removing support for TLSv1.1</li><br></ul><br>"}}}