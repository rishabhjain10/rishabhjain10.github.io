{"default_url":null,"content":{"state":0,"taskInstructions":null,"references":[],"isTaskInstructionsVisible":true,"isCommentMandatory":false,"fields":[],"masterFinding":{"id":21369,"exploitInstructions":"<br><b>Verification Instructions</b><br><br>1. Download the webshell from fuzzdb git repository and change all the variable name and remove the comments.<br><br>https://github.com/fuzzdb-project/fuzzdb/blob/master/web-backdoors/<br><br>2. Uploaded the file to the server using the PUT HTTP method.  <br>Note: when using Burp Suite, the content-length will be automatically calculated.<br><br>PUT /cmd.aspx HTTP/1.0<br>Host: hostname.com<br>Content-Length: 87<br><br><file content here><br><br>3. Access the file in browser.<br><br>4. Access  the operating system and escalation privileges.<br><br>5. Remove the file.<br><br>DELETE /cmd.aspx HTTP/1.0<br>Host: hostname.com<br>Content-Length: 87<br><br><b>Reporting Requirements</b><br><br>1. Show a screen shot of the file upload.<br>2. Show a screen shot of the file access.<br>3. Show a screen shot of the operating system command execution.<br>4. Show the local or domain privilege escalation.<br><br><b>References</b><br>https://tools.ietf.org/html/rfc2518","verificationInstructions":"<b>Verification Instructions</b><br><br><ul><li>Uploaded a test file to the server using the PUT HTTP method.</li><br><li>Note: when using Burp Suite, the content-length will be automatically calculated.</li><br></ul><br>PUT /test.txt HTTP/1.0<br>Host: hostname.com<br>Content-Length: 15<br><br>This is a test.<br><br><ul><li>Access the file in browser.</li><br><li>Remove the file.</li><br></ul><br><br>DELETE /test.txt HTTP/1.0<br>Host: hostname.com<br>Content-Length: 0<br><br>If PUT method allows file uploads, try uploading a web shell. If the web shell is executed server-side, execute OS commands.<br><br><b>Reporting Requirements</b><br><br><ol><li>Show a screenshot of the file upload.</li><br><li>Show a screenshot of the file access.</li><br><li>If OS command execution is possible, include additional details</li><br></ol><br><b>Further Testing</b><br><br>OS command execution can be used to identify loads of other vulnerabilities.<br><br><b>Tools</b><br><ul><li>Obfuscated (to avoid AV detection) fuzzdb web shell available on the NetSPI report</li><br><li>fuzzdb - web shells for different technologies</li><br><li>sqlcmd.aspx - database access via uploaded web shell</li><br></ul><br><b>References</b><br>https://tools.ietf.org/html/rfc2518<br>","remediationInstructions":"Disable the PUT and DELETE methods. If the methods are required for the operation of the server, ensure that only authenticated users can submit PUT or DELETE requests.<br><br>Regardless of the operating system and web server type, it is a best practice to run web services as non-privileged user. File permissions in the web directories should be configured according to the principle of least privilege; web service should not have more than read access to files and execute access to scripts and directories.<br>","name":"Weak Configuration - PUT Method Allowed","sourceId":"WI:3427","severity":"High","businessImpact":"If an attacker can upload web application files, the attacker may be able to execute arbitrary commands on the server. Arbitrary command execution gives an attacker complete access to the server with the permissions of the account running the web server. This may lead to the complete compromise of the confidentiality, integrity, and availability of the affected server.","description":"The PUT method can be used to place files in directories, provided that the PUT method is enabled on the directory and that the web server has write access to the directory. The PUT method can be exploited to upload malicious files and scripts to the server. It may be possible to use these files and scripts to execute commands on the target host within the permissions context of the web server process. Deletion and modification of existing files on the server is also typically possible when the PUT method is enabled.<br>"}}}